#!/usr/bin/env python3
"""
GlobalJobAggregator v2.4 - –° –£–ú–ù–´–ú –ö–ï–®–ò–†–û–í–ê–ù–ò–ï–ú
–ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ Redis + —Ñ–∞–π–ª–æ–≤—ã–π –∫–µ—à –∫–∞–∫ fallback
"""

import os
import requests
import json
import time
import hashlib
from datetime import datetime, timedelta
from typing import List, Dict, Optional
from dataclasses import dataclass, asdict
from dotenv import load_dotenv
import pickle

# –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Redis (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
try:
    import redis
    REDIS_AVAILABLE = True
except ImportError:
    REDIS_AVAILABLE = False
    print("‚ö†Ô∏è Redis –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ–∞–π–ª–æ–≤—ã–π –∫–µ—à")

load_dotenv()

@dataclass
class JobVacancy:
    id: str
    title: str
    company: str
    location: str
    salary: Optional[str]
    description: str
    apply_url: str
    source: str
    posted_date: str
    country: str
    job_type: Optional[str] = None
    language_requirement: str = "unknown"
    refugee_friendly: bool = False

@dataclass
class CachedResult:
    """–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"""
    data: List[Dict]
    timestamp: datetime
    search_params: Dict
    expires_at: datetime

class CacheManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Redis –∏ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∫–µ—à–∞"""
    
    def __init__(self, cache_duration_hours: int = 2):
        self.cache_duration = timedelta(hours=cache_duration_hours)
        self.file_cache_dir = "cache"
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Redis (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
        self.redis_client = None
        if REDIS_AVAILABLE:
            try:
                self.redis_client = redis.Redis(
                    host=os.getenv('REDIS_HOST', 'localhost'),
                    port=int(os.getenv('REDIS_PORT', 6379)),
                    db=int(os.getenv('REDIS_DB', 0)),
                    decode_responses=False  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å pickle
                )
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                self.redis_client.ping()
                print("‚úÖ Redis –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            except Exception as e:
                print(f"‚ö†Ô∏è Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ–∞–π–ª–æ–≤—ã–π –∫–µ—à")
                self.redis_client = None
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∫–µ—à–∞
        os.makedirs(self.file_cache_dir, exist_ok=True)
    
    def _generate_cache_key(self, search_params: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞ –∫–µ—à–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞"""
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
        sorted_params = json.dumps(search_params, sort_keys=True)
        return hashlib.md5(sorted_params.encode()).hexdigest()
    
    def get_cached_result(self, search_params: Dict) -> Optional[List[JobVacancy]]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–∑ –∫–µ—à–∞"""
        cache_key = self._generate_cache_key(search_params)
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º Redis
        if self.redis_client:
            try:
                cached_data = self.redis_client.get(f"job_search:{cache_key}")
                if cached_data:
                    cached_result = pickle.loads(cached_data)
                    if datetime.now() < cached_result.expires_at:
                        print(f"üéØ Cache HIT (Redis): {cache_key[:8]}... ({len(cached_result.data)} jobs)")
                        return [JobVacancy(**job_data) for job_data in cached_result.data]
                    else:
                        # –ö–µ—à –∏—Å—Ç–µ–∫, —É–¥–∞–ª—è–µ–º
                        self.redis_client.delete(f"job_search:{cache_key}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ Redis: {e}")
        
        # –ï—Å–ª–∏ Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª–æ–≤—ã–π –∫–µ—à
        return self._get_file_cache(cache_key, search_params)
    
    def _get_file_cache(self, cache_key: str, search_params: Dict) -> Optional[List[JobVacancy]]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∫–µ—à–∞"""
        cache_file = os.path.join(self.file_cache_dir, f"{cache_key}.pkl")
        
        if os.path.exists(cache_file):
            try:
                with open(cache_file, 'rb') as f:
                    cached_result = pickle.load(f)
                
                if datetime.now() < cached_result.expires_at:
                    print(f"üéØ Cache HIT (File): {cache_key[:8]}... ({len(cached_result.data)} jobs)")
                    return [JobVacancy(**job_data) for job_data in cached_result.data]
                else:
                    # –ö–µ—à –∏—Å—Ç–µ–∫, —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
                    os.remove(cache_file)
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∫–µ—à–∞: {e}")
                # –£–¥–∞–ª—è–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                try:
                    os.remove(cache_file)
                except:
                    pass
        
        return None
    
    def cache_result(self, search_params: Dict, jobs: List[JobVacancy]):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –∫–µ—à"""
        if not jobs:  # –ù–µ –∫–µ—à–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            return
        
        cache_key = self._generate_cache_key(search_params)
        expires_at = datetime.now() + self.cache_duration
        
        cached_result = CachedResult(
            data=[asdict(job) for job in jobs],
            timestamp=datetime.now(),
            search_params=search_params,
            expires_at=expires_at
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Redis
        if self.redis_client:
            try:
                self.redis_client.setex(
                    f"job_search:{cache_key}",
                    int(self.cache_duration.total_seconds()),
                    pickle.dumps(cached_result)
                )
                print(f"üíæ Cache SAVE (Redis): {cache_key[:8]}... ({len(jobs)} jobs, TTL: {self.cache_duration})")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Redis: {e}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª–æ–≤—ã–π –∫–µ—à –∫–∞–∫ fallback
        self._save_file_cache(cache_key, cached_result)
    
    def _save_file_cache(self, cache_key: str, cached_result: CachedResult):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª–æ–≤—ã–π –∫–µ—à"""
        cache_file = os.path.join(self.file_cache_dir, f"{cache_key}.pkl")
        
        try:
            with open(cache_file, 'wb') as f:
                pickle.dump(cached_result, f)
            print(f"üíæ Cache SAVE (File): {cache_key[:8]}... ({len(cached_result.data)} jobs)")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∫–µ—à–∞: {e}")
    
    def cleanup_expired_cache(self):
        """–û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–µ–≥–æ –∫–µ—à–∞"""
        print("üßπ –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–µ–≥–æ –∫–µ—à–∞...")
        
        # –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –∫–µ—à–∞
        if os.path.exists(self.file_cache_dir):
            for filename in os.listdir(self.file_cache_dir):
                if filename.endswith('.pkl'):
                    filepath = os.path.join(self.file_cache_dir, filename)
                    try:
                        with open(filepath, 'rb') as f:
                            cached_result = pickle.load(f)
                        
                        if datetime.now() >= cached_result.expires_at:
                            os.remove(filepath)
                            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω –∏—Å—Ç–µ–∫—à–∏–π –∫–µ—à: {filename}")
                    except Exception as e:
                        # –£–¥–∞–ª—è–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                        try:
                            os.remove(filepath)
                            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π –∫–µ—à: {filename}")
                        except:
                            pass

class RateLimiter:
    """–û–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API"""

    def __init__(self, requests_per_minute: int = 20):
        self.requests_per_minute = requests_per_minute
        self.requests = []

    def wait_if_needed(self, cancel_check=None) -> bool:
        """–ñ–¥—ë–º –ø–æ —á—É—Ç—å-—á—É—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–º–µ–Ω—É. –í–µ—Ä–Ω—ë—Ç False, –µ—Å–ª–∏ –æ—Ç–º–µ–Ω–∏–ª–∏."""
        now = time.time()
        # –≤—ã—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
        self.requests = [t for t in self.requests if now - t < 60]

        if len(self.requests) >= self.requests_per_minute:
            oldest = min(self.requests)
            wait_time = max(0.0, 60.0 - (now - oldest) + 1)  # +1—Å –∑–∞–ø–∞—Å
            if wait_time > 0:
                print(f"‚è±Ô∏è Rate limit: –æ–∂–∏–¥–∞–Ω–∏–µ {wait_time:.1f} —Å–µ–∫—É–Ω–¥...")
                end = time.time() + wait_time
                while True:
                    # –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–º–µ–Ω—ã
                    if cancel_check and cancel_check():
                        return False
                    remain = end - time.time()
                    if remain <= 0:
                        break
                    time.sleep(min(0.2, remain))
        # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å
        self.requests.append(time.time())
        return True



class GlobalJobAggregator:
    def __init__(self, cache_duration_hours: int = 2):
        self.app_id = os.getenv('ADZUNA_APP_ID')
        self.app_key = os.getenv('ADZUNA_APP_KEY')
        
        if not self.app_id or not self.app_key:
            raise ValueError("Adzuna API –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–µ—à–∞ –∏ rate limiter
        self.cache_manager = CacheManager(cache_duration_hours)
        self.rate_limiter = RateLimiter()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        self.stats = {
            'cache_hits': 0,
            'cache_misses': 0,
            'api_requests': 0,
            'total_jobs_found': 0
        }
        
        # –í–∞—à–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        self.countries = {
            'de': {'name': '–ì–µ—Ä–º–∞–Ω–∏—è', 'currency': '‚Ç¨', 'refugee_support': True, 'work_without_language': True},
            'gb': {'name': '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', 'currency': '¬£', 'refugee_support': True, 'work_without_language': True},
            'pl': {'name': '–ü–æ–ª—å—à–∞', 'currency': 'PLN', 'refugee_support': True, 'work_without_language': True},
            'nl': {'name': '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã', 'currency': '‚Ç¨', 'refugee_support': True, 'work_without_language': True},
            'fr': {'name': '–§—Ä–∞–Ω—Ü–∏—è', 'currency': '‚Ç¨', 'refugee_support': True, 'work_without_language': False},
            'at': {'name': '–ê–≤—Å—Ç—Ä–∏—è', 'currency': '‚Ç¨', 'refugee_support': True, 'work_without_language': True},
            'us': {'name': '–°–®–ê', 'currency': '$', 'refugee_support': True, 'work_without_language': True},
            'ca': {'name': '–ö–∞–Ω–∞–¥–∞', 'currency': 'C$', 'refugee_support': True, 'work_without_language': True},
            'au': {'name': '–ê–≤—Å—Ç—Ä–∞–ª–∏—è', 'currency': 'A$', 'refugee_support': True, 'work_without_language': True},
            'it': {'name': '–ò—Ç–∞–ª–∏—è', 'currency': '‚Ç¨', 'refugee_support': True, 'work_without_language': True},
            'es': {'name': '–ò—Å–ø–∞–Ω–∏—è', 'currency': '‚Ç¨', 'refugee_support': True, 'work_without_language': True},
            'ch': {'name': '–®–≤–µ–π—Ü–∞—Ä–∏—è', 'currency': 'CHF', 'refugee_support': True, 'work_without_language': True},
            'be': {'name': '–ë–µ–ª—å–≥–∏—è', 'currency': '‚Ç¨', 'refugee_support': True, 'work_without_language': True},
            'se': {'name': '–®–≤–µ—Ü–∏—è', 'currency': 'SEK', 'refugee_support': True, 'work_without_language': True},
            'no': {'name': '–ù–æ—Ä–≤–µ–≥–∏—è', 'currency': 'NOK', 'refugee_support': True, 'work_without_language': True},
            'dk': {'name': '–î–∞–Ω–∏—è', 'currency': 'DKK', 'refugee_support': True, 'work_without_language': True},
            'cz': {'name': '–ß–µ—Ö–∏—è', 'currency': 'CZK', 'refugee_support': True, 'work_without_language': True},
            'sk': {'name': '–°–ª–æ–≤–∞–∫–∏—è', 'currency': '‚Ç¨', 'refugee_support': True, 'work_without_language': True}
        }
        
        # –î–æ–±–∞–≤–ª–µ–Ω —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Å—Ç—ã—Ö –æ–ø–µ—á–∞—Ç–æ–∫ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö –≥–æ—Ä–æ–¥–æ–≤
        self.CITY_CORRECTIONS = {
            'rostok': 'Rostock',
            'berlinn': 'Berlin',
            'munhen': 'Munich',
            '–º—é–Ω—Ö–µ–Ω': 'Munich',
            'stralsund': 'Stralsund',
            '–≤–∞—Ä—à–∞–≤–∞': 'Warsaw',
            'kiev': 'Kyiv',
            '–∫–∏–µ–≤': 'Kyiv',
            'londonn': 'London',
            '–ª–æ–Ω–¥–æ–Ω': 'London',
            '–ø–∞—Ä–∏–∂': 'Paris'
        }
        
        # –í –∫–ª–∞—Å—Å–µ GlobalJobAggregator –∑–∞–º–µ–Ω–∏—Ç–µ self.specific_jobs –Ω–∞:
        self.specific_jobs = {
            'üöó –¢–†–ê–ù–°–ü–û–†–¢ –ò –î–û–°–¢–ê–í–ö–ê': {
                '–í–æ–¥–∏—Ç–µ–ª—å —Ç–∞–∫—Å–∏': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π (0-2)
                    'taxi driver', 'cab driver', 'uber driver',
                    # –ù–µ–º–µ—Ü–∫–∏–π (3-5)
                    'taxifahrer', 'taxi fahrer', 'fahrdienst',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π (6-8)
                    'chauffeur de taxi', 'conducteur de taxi', 'vtc',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π (9-11)
                    'conductor de taxi', 'taxista', 'conductor vtc',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π (12-14)
                    'tassista', 'autista taxi', 'conducente taxi',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π (15-17)
                    'taxichauffeur', 'taxi bestuurder', 'uber chauffeur',
                    # –ü–æ–ª—å—Å–∫–∏–π (18-20)
                    'taks√≥wkarz', 'kierowca taxi', 'przewo≈∫nik',
                    # –ß–µ—à—Å–∫–∏–π (21-23)
                    'taxik√°≈ô', '≈ôidiƒç taxi', 'dopravce'
                ],
                
                '–í–æ–¥–∏—Ç–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ B': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'car driver', 'personal driver', 'chauffeur',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'pkw fahrer', 'autofahrer', 'fahrdienst fahrer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'conducteur', 'chauffeur particulier', 'conducteur vpn',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'conductor', 'chofer personal', 'conductor particular',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'autista', 'conducente', 'autista personale',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'automobilist', 'chauffeur', 'bestuurder',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'kierowca', 'szofer', 'kierowca osobowy',
                    # –ß–µ—à—Å–∫–∏–π
                    '≈ôidiƒç', '≈°of√©r', 'osobn√≠ ≈ôidiƒç'
                ],

                
                
                '–í–æ–¥–∏—Ç–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ C': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'truck driver', 'HGV driver', 'lorry driver',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'lkw fahrer', 'fernfahrer', 'kraftfahrer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'conducteur poids lourd', 'chauffeur pl', 'routier',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'conductor cami√≥n', 'camionero', 'transportista',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'camionista', 'autista camion', 'trasportatore',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'vrachtwagenchauffeur', 'trucker', 'transporteur',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'kierowca ciƒô≈ºar√≥wki', 'kierowca tir', 'przewo≈∫nik',
                    # –ß–µ—à—Å–∫–∏–π
                    '≈ôidiƒç n√°kladn√≠ho', 'kamion√°≈ô', 'dopravce'
                ],
                
                '–í–æ–¥–∏—Ç–µ–ª—å-–∫—É—Ä—å–µ—Ä': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'delivery driver', 'courier driver', 'van driver',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'lieferfahrer', 'kurier fahrer', 'paket fahrer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'chauffeur-livreur', 'conducteur livreur', 'livreur auto',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'conductor reparto', 'repartidor auto', 'mensajero auto',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'autista consegne', 'conducente corriere', 'fattorino auto',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'bezorgchauffeur', 'koerier bestuurder', 'pakket chauffeur',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'kierowca kurierski', 'dostawca', 'kierowca dostawczy',
                    # –ß–µ—à—Å–∫–∏–π
                    '≈ôidiƒç kur√Ωr', 'rozvozce', 'doruƒçovatel'
                ],
                
                '–ö—É—Ä—å–µ—Ä –ø–µ—à–∫–æ–º': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'bicycle courier', 'bike courier', 'foot courier',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'fahrradkurier', 'radkurier', 'fu√ükurier',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'coursier v√©lo', 'livreur v√©lo', 'messager v√©lo',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'mensajero bicicleta', 'repartidor bici', 'ciclomensajero',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'fattorino bici', 'corriere bici', 'rider',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'fietskoerier', 'fietsbezorger', 'rijder',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'kurier rowerowy', 'rowerzysta', 'dostawca rower',
                    # –ß–µ—à—Å–∫–∏–π
                    'cyklo kur√Ωr', 'j√≠zdn√≠ kur√Ωr', 'cyklista'
                ],
                
                '–ö—É—Ä—å–µ—Ä-–¥–æ—Å—Ç–∞–≤—â–∏–∫ –µ–¥—ã': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'food delivery driver', 'uber eats driver', 'deliveroo rider',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'essenslieferant', 'lieferando fahrer', 'food kurier',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'livreur repas', 'uber eats', 'deliveroo livreur',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'repartidor comida', 'glovo repartidor', 'uber eats',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'rider cibo', 'glovo rider', 'fattorino food',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'maaltijdbezorger', 'uber eats', 'thuisbezorgd',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'dostawa jedzenia', 'uber eats', 'glovo kurier',
                    # –ß–µ—à—Å–∫–∏–π
                    'rozvoz j√≠dla', 'uber eats', 'bolt food'
                ],
                
                '–í–æ–¥–∏—Ç–µ–ª—å –∞–≤—Ç–æ–±—É—Å–∞': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'bus driver', 'coach driver', 'transit driver',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'busfahrer', 'omnibusfahrer', 'nahverkehr fahrer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'conducteur bus', 'chauffeur autobus', 'machiniste',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'conductor autob√∫s', 'chofer bus', 'conductor transporte',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'autista autobus', 'conducente bus', 'autista mezzi',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'buschauffeur', 'ov chauffeur', 'bestuurder bus',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'kierowca autobusu', 'motorniczej', 'przewo≈∫nik',
                    # –ß–µ—à—Å–∫–∏–π
                    '≈ôidiƒç autobusu', 'autobus√°k', 'dopravce'
                ],
                
                '–í–æ–¥–∏—Ç–µ–ª—å –≥—Ä—É–∑–æ–≤–∏–∫–∞': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'truck driver', 'freight driver', 'haulage driver',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'lkw fahrer', 'speditionsfahrer', 'transportfahrer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'conducteur camion', 'transporteur', 'livreur camion',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'camionero', 'conductor transporte', 'operador log√≠stico',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'camionista', 'autotrasportatore', 'operatore logistico',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'vrachtwagenchauffeur', 'logistiek chauffeur', 'transport',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'kierowca ciƒô≈ºarowy', 'spedytor', 'logistyk',
                    # –ß–µ—à—Å–∫–∏–π
                    '≈ôidiƒç n√°kladn√≠', 'spedice ≈ôidiƒç', 'logistik'
                ]
            },

            'üîß –ê–í–¢–û–°–ï–†–í–ò–° –ò –¢–ï–•–û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–ï': {
                '–ê–≤—Ç–æ–º–µ—Ö–∞–Ω–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'auto mechanic', 'car mechanic', 'vehicle technician', 'automotive technician',
                    'motor mechanic', 'garage mechanic', 'auto repair technician',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'kfz mechaniker', 'kfz mechatroniker', 'automechaniker', 'fahrzeugmechaniker',
                    'kraftfahrzeugmechaniker', 'autowerkstatt mechaniker',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'm√©canicien automobile', 'm√©canicien auto', 'technicien automobile',
                    'r√©parateur automobile', 'garagiste m√©canicien',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'mec√°nico automotriz', 'mec√°nico de autos', 't√©cnico automotriz',
                    'mec√°nico de veh√≠culos', 'reparador de autos',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'meccanico auto', 'meccanico automobilistico', 'tecnico automotive',
                    'riparatore auto', 'meccanico officina',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'automonteur', 'auto mechaniker', 'voertuig technicus',
                    'garage monteur', 'auto reparateur',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'mechanik samochodowy', 'automechanik', 'technik motoryzacyjny',
                    'mechanik pojazd√≥w', 'serwisant samochodowy',
                    # –ß–µ—à—Å–∫–∏–π
                    'automechanik', 'mechanik vozidel', 'technik automotive',
                    'oprav√°≈ô automobil≈Ø', 'servisn√≠ technik'
                ],
                
                '–ê–≤—Ç–æ—Å–ª–µ—Å–∞—Ä—å': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'automotive fitter', 'car repair specialist', 'mechanical fitter',
                    'auto service technician', 'vehicle fitter',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'kfz schlosser', 'fahrzeugschlosser', 'auto schlosser',
                    'kfz servicetechniker',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'ajusteur automobile', 'monteur auto', 'r√©parateur m√©canique',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'ajustador automotriz', 't√©cnico de reparaci√≥n', 'montador auto',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'montatore auto', 'aggiustatore veicoli', 'tecnico riparazioni',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'auto fitter', 'voertuig monteur', 'mechanisch monteur',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    '≈õlusarz samochodowy', 'monterz samochodowy', 'fitter automotive',
                    # –ß–µ—à—Å–∫–∏–π
                    'automont√©r', 'z√°meƒçn√≠k automotive', 'mont√°≈æn√≠k vozidel'
                ],
                
                '–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂–Ω–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'tire fitter', 'tyre fitter', 'tire technician', 'wheel fitter',
                    'tire service technician', 'tire installer',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'reifenmonteur', 'reifen service techniker', 'reifenwechsler',
                    'reifenservice mitarbeiter',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'monteur pneus', 'technicien pneumatique', 'sp√©cialiste pneus',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'montador neum√°ticos', 't√©cnico de llantas', 'especialista neum√°ticos',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'gommista', 'montatore pneumatici', 'tecnico gomme',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'bandenmonteur', 'bandenservice monteur', 'banden technicus',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'wulkanizator', 'monterz opon', 'serwisant opon',
                    # –ß–µ—à—Å–∫–∏–π
                    'pneuservis technik', 'mont√©r pneumatik', 'pneumatik√°≈ô'
                ],
                
                '–î–∏–∞–≥–Ω–æ—Å—Ç': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'diagnostic technician', 'auto diagnostician', 'vehicle diagnostics',
                    'automotive diagnostic specialist', 'car diagnostic expert',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'kfz diagnostiker', 'fahrzeugdiagnostiker', 'diagnose techniker',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'technicien diagnostic', 'diagnostiqueur automobile', 'expert diagnostic',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    't√©cnico diagn√≥stico', 'diagnosticador automotriz', 'especialista diagn√≥stico',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'diagnostico auto', 'tecnico diagnosi', 'specialista diagnostica',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'diagnose technicus', 'auto diagnose specialist', 'voertuig diagnose',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'diagnostyk samochodowy', 'technik diagnostyki', 'specjalista diagnoza',
                    # –ß–µ—à—Å–∫–∏–π
                    'diagnostik vozidel', 'technik diagnostiky', 'specialista diagn√≥za'
                ],
                
                '–ú–∞—Å—Ç–µ—Ä-–ø—Ä–∏—ë–º—â–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'service advisor', 'automotive service advisor', 'service reception',
                    'customer service automotive', 'service consultant',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'serviceberater', 'kfz serviceberater', 'kundenberater automotive',
                    'annahme mitarbeiter',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'conseiller service', 'r√©ceptionnaire atelier', 'conseiller client√®le auto',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'asesor de servicio', 'recepcionista taller', 'consultor automotriz',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'consulente servizio', 'addetto accettazione', 'consulente automotive',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'service adviseur', 'auto service consultant', 'klanten adviseur',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'doradca serwisowy', 'konsultant serwisu', 'przyjmujƒÖcy zlecenia',
                    # –ß–µ—à—Å–∫–∏–π
                    'servisn√≠ poradce', 'poradce servisu', 'konzultant automotive'
                ],
                
                '–ö—É–∑–æ–≤—â–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'panel beater', 'body repair technician', 'bodyshop technician',
                    'auto body repairer', 'collision repair specialist',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'karosseriebauer', 'karosserie und fahrzeugbaumechaniker', 'unfallreparatur',
                    'karosserie techniker',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'carrossier', 'r√©parateur carrosserie', 'technicien carrosserie',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'chapista', 't√©cnico carrocer√≠a', 'reparador carrocer√≠a',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'carrozziere', 'tecnico carrozzeria', 'riparatore carrozzeria',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'carrosserie monteur', 'plaatwerker auto', 'bodywork technicus',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'blacharz samochodowy', 'karoser', 'specjalista karoserii',
                    # –ß–µ—à—Å–∫–∏–π
                    'karos√°≈ô', 'technik karoserie', 'oprav√°≈ô karoserie'
                ],
                
                '–ú–∞–ª—è—Ä –ø–æ –∞–≤—Ç–æ': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'car painter', 'automotive painter', 'bodyshop painter',
                    'vehicle painter', 'auto refinisher',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'fahrzeuglackierer', 'auto lackierer', 'karosserie lackierer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'peintre automobile', 'peintre carrossier', 'laqueur auto',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'pintor automotriz', 'pintor de autos', 'laqueador automotriz',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'verniciatore auto', 'pittore carrozzeria', 'laccatore automotive',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'autospuiter', 'voertuig schilder', 'carrosserie spuiter',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'lakiernik samochodowy', 'malarz samochodowy', 'lakiernik automotive',
                    # –ß–µ—à—Å–∫–∏–π
                    'lak√Ωrn√≠k vozidel', 'natƒõraƒç automotive', 'mal√≠≈ô karoserie'
                ]
            },
            
            '‚õΩ –ê–ó–° –ò –¢–û–ü–õ–ò–í–û': {
                '–ó–∞–ø—Ä–∞–≤—â–∏–∫ –Ω–∞ –ê–ó–°': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'gas station attendant', 'fuel attendant', 'pump attendant',
                    'petrol station worker', 'service station attendant', 'fuel station operator',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'tankstellenmitarbeiter', 'mitarbeiter tankstelle', 'tankwart',
                    'tankstellen verk√§ufer', 'zapfs√§ulen bediener',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'employ√© station-service', 'pompiste', 'agent station essence',
                    'vendeur carburant', 'op√©rateur station',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'empleado gasolinera', 'despachador combustible', 'operador estaci√≥n',
                    'vendedor gasolina', 'asistente estaci√≥n servicio',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'addetto distributore', 'benzinai', 'operatore stazione servizio',
                    'addetto carburanti', 'impiegato stazione',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'tankstation medewerker', 'pompbediende', 'benzinestation bediende',
                    'brandstof verkoper', 'service station medewerker',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'pracownik stacji paliw', 'dystrybutor paliw', 'obs≈Çuga stacji benzynowej',
                    'sprzedawca paliw', 'operator stacji',
                    # –ß–µ—à—Å–∫–∏–π
                    'ƒçerpaƒç pohonn√Ωch hmot', 'obsluha ƒçerpac√≠ stanice', 'prodavaƒç paliv',
                    'pracovn√≠k benz√≠nky', 'oper√°tor ƒçerpac√≠ stanice'
                ],
                
                '–û–ø–µ—Ä–∞—Ç–æ—Ä –ê–ó–°': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'fuel station operator', 'gas station operator', 'fuel station supervisor',
                    'petrol station manager', 'fuel depot operator',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'tankstellen operator', 'tankstellenleiter', 'tankstellen supervisor',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'op√©rateur station-service', 'responsable station essence', 'superviseur station',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'operador estaci√≥n servicio', 'supervisor gasolinera', 'encargado estaci√≥n',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'operatore stazione servizio', 'responsabile distributore', 'supervisore stazione',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'tankstation operator', 'benzinestation supervisor', 'station manager',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'operator stacji paliw', 'kierownik stacji', 'nadzorca stacji',
                    # –ß–µ—à—Å–∫–∏–π
                    'oper√°tor ƒçerpac√≠ stanice', 'vedouc√≠ benz√≠nky', 'supervizor stanice'
                ],
                
                '–ö–∞—Å—Å–∏—Ä –Ω–∞ –ê–ó–°': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'gas station cashier', 'fuel station cashier', 'petrol station cashier',
                    'service station cashier', 'pump cashier',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'kassierer tankstelle', 'tankstellen kassierer', 'verk√§ufer tankstelle',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'caissier station-service', 'caissi√®re station essence', 'vendeur station',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'cajero gasolinera', 'cajera estaci√≥n servicio', 'vendedor estaci√≥n',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'cassiere stazione servizio', 'cassiera distributore', 'addetto cassa stazione',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'kassier tankstation', 'kassa medewerker benzinestation', 'verkoper station',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'kasjer stacji paliw', 'sprzedawca stacji', 'obs≈Çuga kasy stacji',
                    # –ß–µ—à—Å–∫–∏–π
                    'pokladn√≠ ƒçerpac√≠ stanice', 'prodavaƒç benz√≠nky', 'kassier stanice'
                ]
            },
            
            'üõ¢Ô∏è –ù–ï–§–¢–¨ –ò –ì–ê–ó': {
                '–û–ø–µ—Ä–∞—Ç–æ—Ä –¥–æ–±—ã—á–∏': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'oilfield operator', 'production operator', 'oil & gas operator',
                    'well operator', 'drilling operator', 'field operator',
                    'roustabout', 'roughneck', 'derrickhand', 'oil rig worker',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    '√∂l und gas operator', 'f√∂rderanlagenbediener', 'bohrinsel arbeiter',
                    'erd√∂l techniker', 'produktions operator',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'op√©rateur p√©trolier', 'technicien p√©trole gaz', 'foreur p√©trolier',
                    'ouvrier plateforme', 'op√©rateur production',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'operador petrol√≠fero', 't√©cnico petr√≥leo gas', 'perforador petrolero',
                    'operario plataforma', 'operador producci√≥n',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'operatore petrolifero', 'tecnico petrolio gas', 'perforatore petrolifero',
                    'operaio piattaforma', 'operatore produzione',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'olie gas operator', 'booreiland werker', 'productie operator',
                    'oliefield operator', 'petroleum technicus',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'operator wydobycia', 'pracownik ropy naftowej', 'operator wiertniczy',
                    'technik naftowy', 'operator produkcji',
                    # –ß–µ—à—Å–∫–∏–π
                    'oper√°tor tƒõ≈æby', 'pracovn√≠k ropy plynu', 'vrtn√Ω oper√°tor',
                    'technik ropn√Ω', 'oper√°tor produkce'
                ],
                
                '–ü–æ–º–æ—â–Ω–∏–∫ –±—É—Ä–∏–ª—å—â–∏–∫–∞': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'floorhand', 'derrickman', 'drilling assistant', 'roughneck',
                    'drilling helper', 'rig worker', 'drilling crew',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'bohrhelfer', 'helfer bohranlage', 'bohrassistent',
                    'bohrarbeiter', 'bohrmannschaft',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'aide foreur', 'assistant forage', 'ouvrier forage',
                    'manoeuvre forage', '√©quipe forage',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'ayudante perforador', 'asistente perforaci√≥n', 'obrero perforaci√≥n',
                    'auxiliar perforador', 'equipo perforaci√≥n',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'assistente perforatore', 'aiuto perforazione', 'operaio perforazione',
                    'ausiliario perforatore', 'squadra perforazione',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'boor assistent', 'boor helper', 'boring medewerker',
                    'boorploeg werker', 'drilling assistent',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'pomocnik wiertacza', 'asystent wiercenia', 'robotnik wiertniczy',
                    'pomocniczy wiertacz', 'ekipa wiertnicza',
                    # –ß–µ—à—Å–∫–∏–π
                    'pomocn√≠k vrtaƒçe', 'asistent vrt√°n√≠', 'pracovn√≠k vrt√°n√≠',
                    'pomocn√Ω vrtaƒç', 'vrtn√° ƒçeta'
                ],
                
                '–†–∞–±–æ—á–∏–π –Ω–µ—Ñ—Ç–µ–±–∞–∑—ã': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'oil depot worker', 'petroleum terminal operator', 'tank farm operator',
                    'fuel terminal worker', 'oil storage worker', 'refinery worker',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'erd√∂llager arbeiter', 'terminalmitarbeiter', 'tanklager operator',
                    'raffinerie arbeiter', 'kraftstofflager mitarbeiter',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'ouvrier d√©p√¥t p√©trolier', 'employ√© terminal', 'op√©rateur terminal',
                    'agent d√©p√¥t carburant', 'travailleur raffinerie',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'trabajador dep√≥sito petr√≥leo', 'operario terminal', 'operador terminal',
                    'empleado dep√≥sito combustible', 'obrero refiner√≠a',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'operaio deposito petrolio', 'addetto terminal', 'operatore terminal',
                    'lavoratore deposito carburante', 'operaio raffineria',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'olie depot werker', 'terminal operator', 'brandstof depot medewerker',
                    'raffinaderij werker', 'tank park operator',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'pracownik bazy paliwowej', 'operator terminalu', 'robotnik rafinerii',
                    'magazynier paliw', 'operator sk≈Çadu',
                    # –ß–µ—à—Å–∫–∏–π
                    'pracovn√≠k ropn√© z√°kladny', 'oper√°tor termin√°lu', 'dƒõln√≠k rafinerie',
                    'skladn√≠k paliv', 'oper√°tor skladu'
                ]
            },
            
            
            
            'üèóÔ∏è –°–¢–†–û–ò–¢–ï–õ–¨–°–¢–í–û –ò –ü–†–û–ò–ó–í–û–î–°–¢–í–û': {
                '–°—Ç—Ä–æ–∏—Ç–µ–ª—å-—Ä–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'construction worker', 'builder', 'construction labourer',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'bauarbeiter', 'handwerker', 'bauhilfsarbeiter',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'ouvrier b√¢timent', 'manoeuvre', 'ouvrier construction',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'obrero construcci√≥n', 'pe√≥n', 'alba√±il ayudante',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'operaio edile', 'manovale', 'operaio cantiere',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'bouwvakker', 'grondwerker', 'bouw medewerker',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'robotnik budowlany', 'pracownik budowy', 'pomocnik',
                    # –ß–µ—à—Å–∫–∏–π
                    'stavebn√≠ dƒõln√≠k', 'pracovn√≠k stavby', 'pomocn√≠k'
                ],
                
                '–ì—Ä—É–∑—á–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'warehouse worker', 'loader', 'packer',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'lagerarbeiter', 'kommissionierer', 'packer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'manutentionnaire', 'pr√©parateur commandes', 'magasinier',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'operario almac√©n', 'mozo', 'preparador pedidos',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'magazziniere', 'addetto picking', 'operatore',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'magazijnmedewerker', 'orderpicker', 'lader',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'magazynier', 'pakowacz', 'pracownik magazynu',
                    # –ß–µ—à—Å–∫–∏–π
                    'skladn√≠k', 'baliƒç', 'pracovn√≠k skladu'
                ],
                
                '–°–∫–ª–∞–¥—Å–∫–æ–π —Ä–∞–±–æ—Ç–Ω–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'warehouse operative', 'stock handler', 'logistics worker',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'lagermitarbeiter', 'logistikmitarbeiter', 'lagerist',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'agent logistique', 'employ√© entrep√¥t', 'gestionnaire stock',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'operario log√≠stica', 'empleado almac√©n', 'gestor stock',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'addetto logistica', 'operatore magazzino', 'addetto stock',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'logistiek medewerker', 'voorraad beheerder', 'warehouse',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'logistyk', 'pracownik logistyczny', 'operator magazynu',
                    # –ß–µ—à—Å–∫–∏–π
                    'logistik', 'skladov√Ω pracovn√≠k', 'oper√°tor skladu'
                ],
                
                '–†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'general worker', 'manual worker', 'helper',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'hilfsarbeiter', 'allrounder', 'arbeiter',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'ouvrier polyvalent', 'manoeuvre', 'aide g√©n√©ral',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'pe√≥n general', 'auxiliar', 'trabajador manual',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'operaio generico', 'tuttofare', 'ausiliario',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'algemeen medewerker', 'handwerker', 'hulpkracht',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'robotnik', 'pracownik fizyczny', 'pomocnik',
                    # –ß–µ—à—Å–∫–∏–π
                    'dƒõln√≠k', 'pomocn√Ω pracovn√≠k', 'manu√°ln√≠ pracovn√≠k'
                ],
                
                '–†–∞–±–æ—á–∏–π –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'factory worker', 'production worker', 'manufacturing operative',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'produktionsmitarbeiter', 'fabrikarbeiter', 'fertigungsmitarbeiter',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'ouvrier production', 'op√©rateur machine', 'agent fabrication',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'operario producci√≥n', 'trabajador f√°brica', 'operador m√°quina',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'operaio produzione', 'addetto produzione', 'operatore macchine',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'productiemedewerker', 'fabriekarbeider', 'machine operator',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'robotnik produkcyjny', 'operator maszyn', 'pracownik fabryki',
                    # –ß–µ—à—Å–∫–∏–π
                    'v√Ωrobn√≠ dƒõln√≠k', 'oper√°tor stroj≈Ø', 'tov√°rn√≠ dƒõln√≠k'
                ]
            },
            
            'üçΩÔ∏è –û–ë–©–ï–ü–ò–¢ –ò –°–ï–†–í–ò–°': {
                '–û—Ñ–∏—Ü–∏–∞–Ω—Ç': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'waiter', 'waitress', 'server',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'kellner', 'kellnerin', 'bedienung',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'serveur', 'serveuse', 'gar√ßon de caf√©',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'camarero', 'camarera', 'mesero',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'cameriere', 'cameriera', 'addetto sala',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'ober', 'serveerster', 'bediening',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'kelner', 'kelnerka', 'obs≈Çuga',
                    # –ß–µ—à—Å–∫–∏–π
                    'ƒç√≠≈°n√≠k', 'ƒç√≠≈°nice', 'obsluha'
                ],
                
                '–ë–∞—Ä–º–µ–Ω': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'bartender', 'barman', 'mixologist',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'barkeeper', 'barmann', 'barmixer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'barman', 'barmaid', 'mixologue',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'barman', 'cantinero', 'coctelero',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'barista', 'barman', 'addetto bar',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'barkeeper', 'barman', 'bartender',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'barman', 'barista', 'obs≈Çuga baru',
                    # –ß–µ—à—Å–∫–∏–π
                    'barman', 'barmanka', 'obsluha baru'
                ],
                
                '–ü–æ–≤–∞—Ä': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'chef', 'cook', 'kitchen chef',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'koch', 'k√ºchenchef', 'chefkoch',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'cuisinier', 'chef cuisinier', 'commis cuisine',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'cocinero', 'chef', 'cocinero jefe',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'cuoco', 'chef', 'addetto cucina',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'kok', 'chef-kok', 'keukenhulp',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'kucharz', 'szef kuchni', 'pracownik kuchni',
                    # –ß–µ—à—Å–∫–∏–π
                    'kucha≈ô', '≈°√©fkucha≈ô', 'kucha≈ôka'
                ],
                
                '–ü–æ–º–æ—â–Ω–∏–∫ –ø–æ–≤–∞—Ä–∞': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'kitchen assistant', 'commis chef', 'prep cook',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'k√ºchenhilfe', 'k√ºchengehilfe', 'hilfskoch',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'aide cuisinier', 'commis cuisine', 'assistant cuisine',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'ayudante cocina', 'auxiliar cocina', 'pinche',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'aiuto cuoco', 'commis', 'assistente cucina',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'keukenhulp', 'kok assistent', 'keuken medewerker',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'pomoc kuchenna', 'pomocnik kucharza', 'kucharz pomocniczy',
                    # –ß–µ—à—Å–∫–∏–π
                    'kucha≈ôka pomocn√°', 'pomocn√≠k kucha≈ôe', 'kuchy≈àsk√Ω pomocn√≠k'
                ],
                
                '–ü–æ—Å—É–¥–æ–º–æ–π—â–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'dishwasher', 'kitchen porter', 'pot washer',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'sp√ºler', 'abw√§scher', 'geschirrsp√ºler',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'plongeur', 'laveur vaisselle', 'aide plonge',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'friegaplatos', 'lavavajillas', 'ayudante cocina',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'lavapiatti', 'sguattero', 'addetto pulizie',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'afwasser', 'spoeler', 'keuken hulp',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'zmywacz', 'pomywacz', 'pracownik kuchni',
                    # –ß–µ—à—Å–∫–∏–π
                    'um√Ωvaƒç n√°doba', 'pomocn√≠k kuchynƒõ', 'dishwasher'
                ],
                
                '–ö–∞—Å—Å–∏—Ä': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'cashier', 'till operator', 'checkout operator',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'kassierer', 'kassiererin', 'kasse',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'caissier', 'caissi√®re', 'h√¥tesse caisse',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'cajero', 'cajera', 'operador caja',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'cassiere', 'cassiera', 'addetto cassa',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'kassi√®re', 'kassamedewerker', 'caissier',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'kasjer', 'kasjerka', 'obs≈Çuga kasy',
                    # –ß–µ—à—Å–∫–∏–π
                    'pokladn√≠k', 'pokladn√≠', 'obsluha pokladny'
                ],
                
                '–ü—Ä–æ–¥–∞–≤–µ—Ü': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'shop assistant', 'sales assistant', 'retail assistant',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'verk√§ufer', 'verk√§uferin', 'einzelhandel',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'vendeur', 'vendeuse', 'conseiller vente',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'vendedor', 'dependiente', 'auxiliar ventas',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'commesso', 'commessa', 'addetto vendite',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'verkoper', 'winkelmedewerker', 'verkoopster',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'sprzedawca', 'sprzedawczyni', 'konsultant',
                    # –ß–µ—à—Å–∫–∏–π
                    'prodavaƒç', 'prodavaƒçka', 'obsluha'
                ]
            },
            
            'üè° –°–ï–†–í–ò–° –ò –û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–ï': {
                '–£–±–æ—Ä—â–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'cleaner', 'janitor', 'cleaning operative',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'reinigungskraft', 'putzkraft', 'hausmeister',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'agent entretien', 'femme m√©nage', 'nettoyeur',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'limpiador', 'conserje', 'empleada limpieza',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'addetto pulizie', 'operatore ecologico', 'pulitore',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'schoonmaker', 'huishoudelijke hulp', 'cleaner',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'sprzƒÖtacz', 'sprzƒÖtaczka', 'pracownik sprzƒÖtajƒÖcy',
                    # –ß–µ—à—Å–∫–∏–π
                    'ukl√≠zeƒçka', '√∫dr≈æb√°≈ô', 'ƒçistiƒç'
                ],
                
                '–°–∞–¥–æ–≤–Ω–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'gardener', 'landscaper', 'groundskeeper',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'g√§rtner', 'landschaftsg√§rtner', 'gartenpfleger',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'jardinier', 'paysagiste', 'espaces verts',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'jardinero', 'paisajista', 'jardinero mantenimiento',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'giardiniere', 'paesaggista', 'manutentore verde',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'tuinman', 'hovenier', 'groenvoorziening',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'ogrodnik', 'architekt krajobrazu', 'pracownik zieleni',
                    # –ß–µ—à—Å–∫–∏–π
                    'zahradn√≠k', 'krajin√°≈ô', '√∫dr≈æba zelenƒõ'
                ],
                
                '–î–æ–º—Ä–∞–±–æ—Ç–Ω–∏—Ü–∞': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'housekeeper', 'domestic worker', 'home help',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'haush√§lterin', 'haushaltshilfe', 'putzfrau',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'femme m√©nage', 'aide m√©nag√®re', 'employ√©e maison',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'empleada dom√©stica', 'asistenta hogar', 'limpiadora',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'domestica', 'colf', 'addetta domestica',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'huishoudster', 'huishoudelijke hulp', 'inwonende hulp',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'gospodyni', 'pomoc domowa', 'sprzƒÖtaczka domowa',
                    # –ß–µ—à—Å–∫–∏–π
                    'hospodynƒõ', 'dom√°c√≠ pomocnice', 'ukl√≠zeƒçka'
                ],
                
                '–ú–∞—Å—Å–∞–∂–∏—Å—Ç': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'massage therapist', 'masseur', 'physiotherapist',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'masseur', 'physiotherapeut', 'wellness therapeut',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'masseur', 'kin√©sith√©rapeute', 'th√©rapeute',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'masajista', 'fisioterapeuta', 'terapeuta',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'massaggiatore', 'fisioterapista', 'operatore wellness',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'masseur', 'fysiotherapeut', 'wellness therapeut',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'masa≈ºysta', 'fizjoterapeuta', 'terapeuta',
                    # –ß–µ—à—Å–∫–∏–π
                    'mas√©r', 'fyzioterapeut', 'wellness terapeut'
                ]
            },

            'üë• –£–•–û–î –ò –ú–ï–î–ò–¶–ò–ù–ê': {
                '–ú–µ–¥—Å–µ—Å—Ç—Ä–∞': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'nurse', 'healthcare assistant', 'nursing assistant',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'krankenschwester', 'pflegekraft', 'gesundheitspfleger',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'infirmier', 'infirmi√®re', 'aide soignant',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'enfermero', 'enfermera', 'auxiliar enfermer√≠a',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'infermiere', 'infermiera', 'operatore sanitario',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'verpleegkundige', 'zorgverlener', 'nurse',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'pielƒôgniarka', 'opiekun medyczny', 'asystent pielƒôgniarki',
                    # –ß–µ—à—Å–∫–∏–π
                    'zdravotn√≠ sestra', 'o≈°et≈ôovatel', 'zdravotn√≠k'
                ],
                
                '–°–∏–¥–µ–ª–∫–∞': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'caregiver', 'care worker', 'support worker',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'betreuer', 'altenpfleger', 'pflegehelfer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'aide √† domicile', 'auxiliaire vie', 'accompagnant',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'cuidador', 'auxiliar ayuda domicilio', 'asistente personal',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'badante', 'assistente domiciliare', 'operatore socio',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'verzorgende', 'thuiszorg', 'zorgverlener',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'opiekun', 'opiekunka', 'asystent osoby',
                    # –ß–µ—à—Å–∫–∏–π
                    'peƒçovatel', 'o≈°et≈ôovatel', 'asistent'
                ],
                
                '–ù—è–Ω—è': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'nanny', 'babysitter', 'childcare worker',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'kinderm√§dchen', 'babysitter', 'kinderbetreuung',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'nounou', 'garde enfants', 'assistante maternelle',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'ni√±era', 'cuidadora ni√±os', 'educadora infantil',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'babysitter', 'tata', 'educatrice',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'kinderopvang', 'babysit', 'oppas',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'opiekunka dzieci', 'niania', 'wychowawca',
                    # –ß–µ—à—Å–∫–∏–π
                    'ch≈Øva', 'babysitter', 'peƒçovatelka'
                ],
                
                '–ì—É–≤–µ—Ä–Ω–∞–Ω—Ç–∫–∞': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'governess', 'au pair', 'childminder',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'gouvernante', 'au pair', 'erzieherin',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'gouvernante', 'au pair', 'pr√©ceptrice',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'institutriz', 'au pair', 'cuidadora interna',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'governante', 'au pair', 'istitutrice',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'gouvernante', 'au pair', 'kindjuf',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'guwernantka', 'au pair', 'opiekunka',
                    # –ß–µ—à—Å–∫–∏–π
                    'vychovatelka', 'au pair', 'guvernantka'
                ],
                
                '–£—Ö–æ–¥ –∑–∞ –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–∞–º–∏': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'elderly care', 'senior care', 'care home worker',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'altenpflege', 'seniorenbetreuung', 'altenheim',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'aide personnes √¢g√©es', 'g√©riatrie', 'ehpad',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'cuidado ancianos', 'geri√°trico', 'residencia mayores',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'assistenza anziani', 'casa riposo', 'operatore geriatrico',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'ouderenzorg', 'bejaardenzorg', 'verzorgingshuis',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'opieka nad seniorami', 'dom opieki', 'geriatria',
                    # –ß–µ—à—Å–∫–∏–π
                    'p√©ƒçe o seniory', 'domov d≈Øchodc≈Ø', 'geriatrie'
                ]
            },
            
            'üíª IT –ò –¢–ï–•–ù–û–õ–û–ì–ò–ò': {
                'Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'python developer', 'python programmer', 'python engineer',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'python entwickler', 'python programmierer', 'software entwickler python',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'd√©veloppeur python', 'programmeur python', 'ing√©nieur python',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'desarrollador python', 'programador python', 'ingeniero python',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'sviluppatore python', 'programmatore python', 'python developer',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'python ontwikkelaar', 'python programmeur', 'software developer',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'programista python', 'developer python', 'in≈ºynier python',
                    # –ß–µ—à—Å–∫–∏–π
                    'python v√Ωvoj√°≈ô', 'python program√°tor', 'software developer'
                ],
                
                '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'web developer', 'frontend developer', 'full stack developer',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'webentwickler', 'frontend entwickler', 'web programmierer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'd√©veloppeur web', 'd√©veloppeur frontend', 'programmeur web',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'desarrollador web', 'frontend developer', 'programador web',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'sviluppatore web', 'web developer', 'programmatore web',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'web ontwikkelaar', 'frontend developer', 'webprogrammeur',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'programista web', 'frontend developer', 'web developer',
                    # –ß–µ—à—Å–∫–∏–π
                    'web v√Ωvoj√°≈ô', 'frontend developer', 'webov√Ω program√°tor'
                ],
                
                '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'software developer', 'programmer', 'software engineer',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'software entwickler', 'programmierer', 'informatiker',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'd√©veloppeur logiciel', 'programmeur', 'ing√©nieur logiciel',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'desarrollador software', 'programador', 'ingeniero software',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'sviluppatore software', 'programmatore', 'ingegnere software',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'software ontwikkelaar', 'programmeur', 'software engineer',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'programista', 'developer', 'in≈ºynier oprogramowania',
                    # –ß–µ—à—Å–∫–∏–π
                    'program√°tor', 'v√Ωvoj√°≈ô software', 'software developer'
                ],
                
                '–î–∞—Ç–∞-–∞–Ω–∞–ª–∏—Ç–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'data analyst', 'data scientist', 'business analyst',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'datenanalyst', 'data scientist', 'business analyst',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'analyste donn√©es', 'data scientist', 'analyste business',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'analista datos', 'cient√≠fico datos', 'analista negocio',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'analista dati', 'data scientist', 'business analyst',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'data analist', 'data scientist', 'business analist',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'analityk danych', 'data scientist', 'analityk biznesowy',
                    # –ß–µ—à—Å–∫–∏–π
                    'datov√Ω analytik', 'data scientist', 'business analytik'
                ],
                
                '–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'system administrator', 'sysadmin', 'IT support',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'systemadministrator', 'it administrator', 'system admin',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'administrateur syst√®me', 'admin syst√®me', 'support technique',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'administrador sistemas', 'sysadmin', 'soporte t√©cnico',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'amministratore sistema', 'sysadmin', 'supporto tecnico',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'systeembeheerder', 'it beheerder', 'technisch support',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'administrator systemu', 'sysadmin', 'wsparcie techniczne',
                    # –ß–µ—à—Å–∫–∏–π
                    'spr√°vce syst√©mu', 'sysadmin', 'technick√° podpora'
                ],
            
                '–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π  
                    'QA engineer', 'software tester', 'quality assurance',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'software tester', 'qa engineer', 'qualit√§tssicherung',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'testeur logiciel', 'ing√©nieur qa', 'assurance qualit√©',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'tester software', 'ingeniero qa', 'control calidad',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'tester software', 'qa engineer', 'controllo qualit√†',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'software tester', 'qa engineer', 'kwaliteitscontrole',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'tester oprogramowania', 'in≈ºynier qa', 'kontrola jako≈õci',
                    # –ß–µ—à—Å–∫–∏–π
                    'tester software', 'qa in≈æen√Ωr', 'kontrola kvality'
                ]
            },

            'üëî –û–§–ò–° –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï': {
                '–ú–µ–Ω–µ–¥–∂–µ—Ä': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'manager', 'management', 'team leader',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'manager', 'teamleiter', 'f√ºhrungskraft',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'manager', 'responsable', 'chef √©quipe',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'manager', 'gerente', 'jefe equipo',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'manager', 'responsabile', 'capo squadra',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'manager', 'teamleider', 'leidinggevende',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'manager', 'kierownik', 'lider zespo≈Çu',
                    # –ß–µ—à—Å–∫–∏–π
                    'mana≈æer', 'vedouc√≠', 'vedouc√≠ t√Ωmu'
                ],
            
                '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'administrator', 'admin', 'office manager',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'administrator', 'b√ºrokaufmann', 'verwaltung',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'administrateur', 'gestionnaire bureau', 'secr√©taire',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'administrador', 'gestor oficina', 'administrativo',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'amministratore', 'impiegato', 'segretario',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'administrateur', 'kantoormedewerker', 'beheerder',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'administrator', 'pracownik biurowy', 'sekretarz',
                    # –ß–µ—à—Å–∫–∏–π
                    'administr√°tor', '√∫≈ôedn√≠k', 'sekret√°≈ô'
                ],
            
                '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'coordinator', 'project coordinator', 'team coordinator',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'koordinator', 'projektkoordinator', 'sachbearbeiter',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'coordinateur', 'coordinateur projet', 'charg√© mission',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'coordinador', 'coordinador proyecto', 'gestor proyectos',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'coordinatore', 'coordinatore progetto', 'responsabile',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'co√∂rdinator', 'projectco√∂rdinator', 'teamco√∂rdinator',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'koordynator', 'koordynator projektu', 'specjalista',
                    # –ß–µ—à—Å–∫–∏–π
                    'koordin√°tor', 'projektov√Ω koordin√°tor', 'specialista'
                ],
            
                '–ê–Ω–∞–ª–∏—Ç–∏–∫': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'business analyst', 'data analyst', 'analyst',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'business analyst', 'analyst', 'sachbearbeiter',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'analyste business', 'analyste', 'charg√© √©tudes',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'analista negocio', 'analista', 'consultor',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'business analyst', 'analista', 'consulente',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'business analist', 'analist', 'consultant',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'analityk biznesowy', 'analityk', 'konsultant',
                    # –ß–µ—à—Å–∫–∏–π
                    'business analytik', 'analytik', 'konzultant'
                ]
            },
        
            'üá∫üá¶ –î–õ–Ø –£–ö–†–ê–ò–ù–°–ö–ò–• –ë–ï–ñ–ï–ù–¶–ï–í': {
                '–†–∞–±–æ—Ç–∞ –¥–ª—è —É–∫—Ä–∞–∏–Ω—Ü–µ–≤': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'ukrainian speaker', 'ukrainian support', 'ukraine refugee',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'ukrainisch sprecher', 'ukraine hilfe', 'fl√ºchtling',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'ukrainien locuteur', 'aide ukraine', 'r√©fugi√©',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'hablante ucraniano', 'ayuda ucrania', 'refugiado',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'parlante ucraino', 'aiuto ucraina', 'profugo',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'oekra√Øens spreker', 'oekra√Øne hulp', 'vluchteling',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'm√≥wiƒÖcy ukrai≈Ñski', 'pomoc ukraina', 'uchod≈∫ca',
                    # –ß–µ—à—Å–∫–∏–π
                    'ukrajinsky mluvƒç√≠', 'pomoc ukrajina', 'uprchl√≠k'
                ],
            
                '–ü—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'refugee support', 'integration program', 'newcomer program',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'fl√ºchtlingshilfe', 'integrationsprogramm', 'newcomer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'aide r√©fugi√©s', 'programme int√©gration', 'accueil',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'ayuda refugiados', 'programa integraci√≥n', 'acogida',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'aiuto profughi', 'programma integrazione', 'accoglienza',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'vluchtelingenhulp', 'integratieprogramma', 'opvang',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'pomoc uchod≈∫com', 'program integracyjny', 'wsparcie',
                    # –ß–µ—à—Å–∫–∏–π
                    'pomoc uprchl√≠k≈Øm', 'integraƒçn√≠ program', 'podpora'
                ],
            
                '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'ukrainian translator', 'ukrainian interpreter', 'translator',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'ukrainisch √ºbersetzer', 'dolmetscher', 'sprachmittler',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'traducteur ukrainien', 'interpr√®te', 'traducteur',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'traductor ucraniano', 'int√©rprete', 'traductor',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'traduttore ucraino', 'interprete', 'traduttore',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'oekra√Øens vertaler', 'tolk', 'vertaler',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    't≈Çumacz ukrai≈Ñski', 't≈Çumacz', 'interpreter',
                    # –ß–µ—à—Å–∫–∏–π
                    'ukrajinsky p≈ôekladatel', 'tlumoƒçn√≠k', 'p≈ôekladatel'
                ],
            
                '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–µ–∂–µ–Ω—Ü–µ–≤': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'refugee assistance', 'asylum support', 'humanitarian aid',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'fl√ºchtlingsbetreuung', 'asylhilfe', 'humanit√§re hilfe',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'assistance r√©fugi√©s', 'aide asile', 'aide humanitaire',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'asistencia refugiados', 'apoyo asilo', 'ayuda humanitaria',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'assistenza profughi', 'supporto asilo', 'aiuto umanitario',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'vluchtelingenopvang', 'asielzoekers', 'humanitaire hulp',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'pomoc uchod≈∫com', 'wsparcie azyl', 'pomoc humanitarna',
                    # –ß–µ—à—Å–∫–∏–π
                    'pomoc uprchl√≠k≈Øm', 'azylov√° pomoc', 'humanit√°rn√≠ pomoc'
                ],
            
                '–†–∞–±–æ—Ç–∞ –±–µ–∑ —è–∑—ã–∫–∞ –¥–ª—è —É–∫—Ä–∞–∏–Ω—Ü–µ–≤': [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'no language ukrainian', 'physical work ukraine', 'manual work',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'ohne sprache ukraine', 'k√∂rperliche arbeit', 'hilfst√§tigkeit',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'sans langue ukraine', 'travail physique', 'travail manuel',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'sin idioma ucrania', 'trabajo f√≠sico', 'trabajo manual',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'senza lingua ucraina', 'lavoro fisico', 'lavoro manuale',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'zonder taal oekra√Øne', 'fysiek werk', 'handwerk',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'bez jƒôzyka ukraina', 'praca fizyczna', 'praca manualna',
                    # –ß–µ—à—Å–∫–∏–π
                    'bez jazyka ukrajina', 'fyzick√° pr√°ce', 'manu√°ln√≠ pr√°ce'
                ]
            },
        
            'üîç –î–†–£–ì–û–ï': {
                "–î—Ä—É–≥–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏": [
                    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                    'general worker', 'manual worker', 'unskilled', 'labourer', 'warehouse worker',
                    'cleaner', 'janitor', 'kitchen assistant', 'waiter', 'shop assistant', 'packer',
                    # –ù–µ–º–µ—Ü–∫–∏–π
                    'helfer', 'aushilfe', 'ungelernt', 'hilfsarbeiter', 'lagerarbeiter', 'reiniger',
                    'k√ºchenhilfe', 'servicekraft', 'verkaufsmitarbeiter', 'packer',
                    # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                    'manutentionnaire', 'ouvrier', 'agent de nettoyage', 'agent d\'entretien', 'magasinier',
                    # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                    'trabajador general', 'pe√≥n', 'limpiador', 'mozo de almac√©n', 'camarero', 'ayudante de cocina',
                    # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                    'operaio', 'lavoratore generico', 'addetto pulizie', 'magazziniere', 'cameriere',
                    # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                    'algemene werknemer', 'magazijnmedewerker', 'schoonmaker', 'keukenhulp',
                    # –ü–æ–ª—å—Å–∫–∏–π
                    'pracownik fizyczny', 'magazynier', 'sprzƒÖtacz', 'pomoc kuchenna', 'kelner',
                    # –ß–µ—à—Å–∫–∏–π
                    'dƒõln√≠k', 'skladn√≠k', 'ukl√≠zeƒç', 'pomocn√° s√≠la', 'ƒç√≠≈°n√≠k'
                ],

            }
        }

        # –ö–∞—Ä—Ç–∞ —è–∑—ã–∫–æ–≤ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º
        self.COUNTRY_LANGUAGES = {
            'de': ['english', 'german'],
            'fr': ['english', 'french'],
            'es': ['english', 'spanish'],
            'it': ['english', 'italian'],
            'nl': ['english', 'dutch'],
            'pl': ['english', 'polish'],
            'cz': ['english', 'czech'],
            'gb': ['english'],
            'us': ['english'],
            'ca': ['english', 'french'],
            'au': ['english'],
            'at': ['english', 'german'],
            'ch': ['english', 'german', 'french'],
            'be': ['english', 'dutch', 'french'],
            'se': ['english'],
            'no': ['english'],
            'dk': ['english'],
            'sk': ['english', 'czech']
        }

        # –ò–Ω–¥–µ–∫—Å—ã —è–∑—ã–∫–æ–≤ –≤ –º–∞—Å—Å–∏–≤–∞—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤
        self.LANGUAGE_INDICES = {
            'english': 0,
            'german': 3,
            'french': 6,
            'spanish': 9,
            'italian': 12,
            'dutch': 15,
            'polish': 18,
            'czech': 21
        }
        
        print(f"üåç GlobalJobAggregator v2.4 —Å —É–º–Ω—ã–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º")
        print(f"üîë App ID: {self.app_id}")
        print(f"üíæ –ö–µ—à: {'Redis + File' if self.cache_manager.redis_client else 'File only'}")
        print(f"üåç –°—Ç—Ä–∞–Ω: {len(self.countries)} | –ü—Ä–æ—Ñ–µ—Å—Å–∏–π: {sum(len(jobs) for jobs in self.specific_jobs.values())}")

    # –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–ª–∞—Å—Å GlobalJobAggregator –ø–æ—Å–ª–µ self.specific_jobs:

        
    
    def search_specific_jobs(self, preferences: Dict, progress_callback=None, cancel_check=None) -> List[JobVacancy]:
        """
        –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –° –ö–ï–®–ò–†–û–í–ê–ù–ò–ï–ú + –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∂–∏–≤–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (progress_callback)
        –∏ –º—è–≥–∫–æ–π –æ—Ç–º–µ–Ω—ã (cancel_check).
        """
        # 1) –ö–ï–® ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –±—ã–ª–æ
        cached_jobs = self.cache_manager.get_cached_result(preferences)
        if cached_jobs:
            self.stats['cache_hits'] += 1
            print(f"üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ –∫–µ—à–∞: {len(cached_jobs)} –≤–∞–∫–∞–Ω—Å–∏–π")
            return cached_jobs

        self.stats['cache_misses'] += 1
        print("üîç –ö–µ—à –ø—É—Å—Ç, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ API...")

        # 2) –ü–æ–∏—Å–∫ —Å –ø–æ—Ä—Ü–∏–æ–Ω–Ω–æ–π –æ—Ç–¥–∞—á–µ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞—Ä—É–∂—É
        all_jobs = self._perform_search(preferences, progress_callback=progress_callback, cancel_check=cancel_check)

        # 3) –ö–ï–®–ò–†–£–ï–ú –∏—Ç–æ–≥
        if all_jobs:
            self.cache_manager.cache_result(preferences, all_jobs)
            self.stats['total_jobs_found'] += len(all_jobs)

        return all_jobs

    
    def _perform_search(self, preferences: Dict, progress_callback=None, cancel_check=None) -> List[JobVacancy]:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ API —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ù–ï–°–ö–û–õ–¨–ö–ò–• –≥–æ—Ä–æ–¥–æ–≤ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é),
        –æ—Ç–¥–∞—ë—Ç ¬´–±–∞—Ç—á–∏¬ª –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞—Ä—É–∂—É —á–µ—Ä–µ–∑ progress_callback(list[JobVacancy]),
        —É–≤–∞–∂–∞–µ—Ç –º—è–≥–∫—É—é –æ—Ç–º–µ–Ω—É —á–µ—Ä–µ–∑ cancel_check().
        """
        all_jobs: List[JobVacancy] = []

        selected_jobs = preferences['selected_jobs']
        countries = preferences['countries']

        # –°–æ–±–∏—Ä–∞–µ–º –≥–æ—Ä–æ–¥–∞ (–∫–∞–∫ —É —Ç–µ–±—è –±—ã–ª–æ)
        raw_cities = preferences.get('cities') or []
        if not raw_cities and preferences.get('city'):
            raw_cities = [preferences.get('city')]

        cities = []
        for c in raw_cities:
            c_stripped = (c or '').strip()
            if not c_stripped:
                continue
            corrected = self._auto_correct_city(c_stripped) if hasattr(self, '_auto_correct_city') else c_stripped
            if corrected != c_stripped:
                print(f"üìç –ì–æ—Ä–æ–¥ '{c_stripped}' –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ '{corrected}'")
            cities.append(corrected)

        # –ü–ª–∞–Ω–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ–∏—Å–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è–º
        tasks = self._optimize_search_tasks(selected_jobs, countries)
        # (total_searches/current_search –æ—Å—Ç–∞–≤–ª—è—é, –µ—Å–ª–∏ —Ç—ã –∏—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –¥–ª—è –ª–æ–≥–æ–≤)
        total_searches = sum(len(t['terms']) for t in tasks)
        current_search = 0

        for task in tasks:
            if cancel_check and cancel_check():
                return self._deduplicate_jobs(all_jobs)

            country = task['country']
            terms = task['terms']

            # –ï—Å–ª–∏ –≥–æ—Ä–æ–¥–∞ –Ω–µ –∑–∞–¥–∞–Ω—ã ‚Äî –æ–¥–∏–Ω –ø—Ä–æ—Ö–æ–¥ –±–µ–∑ –≥–æ—Ä–æ–¥–∞
            cities_to_use = cities if cities else [None]

            for city in cities_to_use:
                if cancel_check and cancel_check():
                    return self._deduplicate_jobs(all_jobs)

                # –ó–∞–ø—Ä–æ—Å –ø–æ—Ä—Ü–∏–µ–π; —Ä–∞–∑–º–µ—Ä 25 –∫–∞–∫ —É —Ç–µ–±—è ‚Äî –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –ø–æ–¥–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π
                try:
                    jobs = self._batch_search_jobs(terms, country, city or '', 25)
                except TypeError:
                    # –Ω–∞ —Å–ª—É—á–∞–π –¥—Ä—É–≥–æ–π —Å–∏–≥–Ω–∞—Ç—É—Ä—ã
                    jobs = self._batch_search_jobs(terms, country, city or '')

                current_search += 1

                if jobs:
                    # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—â–∏–π –ø—É–ª
                    all_jobs.extend(jobs)
                    # ‚¨áÔ∏è –≤–æ—Ç –∫–ª—é—á: –æ—Ç–¥–∞—ë–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π –±–∞—Ç—á –Ω–∞—Ä—É–∂—É –¥–ª—è –ñ–ò–í–û–ì–û —Å—á—ë—Ç—á–∏–∫–∞
                    if progress_callback:
                        try:
                            progress_callback(jobs)
                        except Exception:
                            pass
                else:
                    print(f"     ‚ÑπÔ∏è –í–∞–∫–∞–Ω—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (—Å—Ç—Ä–∞–Ω–∞={country}, –≥–æ—Ä–æ–¥={city or '‚Äî'}) ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º")

                if cancel_check and cancel_check():
                    return self._deduplicate_jobs(all_jobs)

        return self._deduplicate_jobs(all_jobs)


    
    def _optimize_search_tasks(self, selected_jobs: List[str], countries: List[str]) -> List[Dict]:
        """–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–¥–∞—á —Å —É—á–µ—Ç–æ–º —è–∑—ã–∫–æ–≤"""
        tasks = []
        
        search_other_jobs = '–î—Ä—É–≥–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏' in selected_jobs
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –≤—Å–µ —Ç–µ—Ä–º–∏–Ω—ã –ø–æ —Å—Ç—Ä–∞–Ω–∞–º –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
        for country in countries:
            country_terms = []
            
            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–µ—Ä–º–∏–Ω—ã –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
            for job_name in selected_jobs:
                if job_name == '–î—Ä—É–≥–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏':
                    continue
                    
                for category, jobs in self.specific_jobs.items():
                    if job_name in jobs:
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –í–°–ï —Ç–µ—Ä–º–∏–Ω—ã –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
                        country_terms.extend(jobs[job_name])
                        break
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
            if country_terms:
                tasks.append({
                    'job_name': 'Combined Localized Search',
                    'terms': country_terms,  # –í—Å–µ —Ç–µ—Ä–º–∏–Ω—ã –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
                    'country': country
                })
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ "–¥—Ä—É–≥–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π"
            if search_other_jobs:
                tasks.append({
                    'job_name': '–î—Ä—É–≥–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏',
                    'terms': ['search_for_other_jobs'],
                    'country': country
                })
        
        return tasks
    
    def _get_localized_terms(self, job_terms: List[str], country: str) -> List[str]:
        """–í—ã–±–æ—Ä —Ç–µ—Ä–º–∏–Ω–æ–≤ –ø–æ–∏—Å–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω—ã –∏ —è–∑—ã–∫–∞"""
        if country not in self.COUNTRY_LANGUAGES:
            # –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
            return job_terms[:3]
        
        country_languages = self.COUNTRY_LANGUAGES[country]
        selected_terms = []
        
        # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ —è–∑—ã–∫–∞ –≤ —Å—Ç—Ä–∞–Ω–µ –≤—ã–±–∏—Ä–∞–µ–º —Ç–µ—Ä–º–∏–Ω—ã
        for language in country_languages:
            if language in self.LANGUAGE_INDICES:
                start_idx = self.LANGUAGE_INDICES[language]
                end_idx = start_idx + 3  # –ë–µ—Ä–µ–º 3 —Ç–µ—Ä–º–∏–Ω–∞ –Ω–∞ —è–∑—ã–∫
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Ä–º–∏–Ω—ã, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
                language_terms = job_terms[start_idx:end_idx]
                selected_terms.extend([term for term in language_terms if term])
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞–∫—Å–∏–º—É–º 6 —Ç–µ—Ä–º–∏–Ω–æ–≤
        return selected_terms[:6]
    
    def _batch_search_jobs(self, terms: List[str], country: str, location: str = '', max_results: int = 25) -> List[JobVacancy]:
        """–ü–æ–∏—Å–∫ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã–±–æ—Ä–æ–º —è–∑—ã–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ"""
        if country not in self.countries:
            return []
        
        all_jobs = []
        
        # –î–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–ª—É—á–∞—è "–¥—Ä—É–≥–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π"
        if len(terms) == 1 and terms[0] == 'search_for_other_jobs':
            return self._search_single_term('job work position', country, location, max_results, 'search_for_other_jobs', cancel_check=cancel_check)
        
        # üåç –£–ú–ù–´–ô –í–´–ë–û–† –¢–ï–†–ú–ò–ù–û–í –ü–û –Ø–ó–´–ö–£ –°–¢–†–ê–ù–´
        localized_terms = self._get_localized_terms(terms, country)
        
        country_name = self.countries[country]['name']
        languages = ', '.join(self.COUNTRY_LANGUAGES.get(country, ['english']))
        print(f"     üåç –°—Ç—Ä–∞–Ω–∞: {country_name}, —è–∑—ã–∫–∏ –ø–æ–∏—Å–∫–∞: {languages}")
        
        # –î–µ–ª–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Ä–º–∏–Ω–∞
        for i, term in enumerate(localized_terms):  # –ú–∞–∫—Å–∏–º—É–º 3 –∑–∞–ø—Ä–æ—Å–∞
            print(f"     üîç –ó–∞–ø—Ä–æ—Å {i+1}: '{term}'")
            
            jobs = self._search_single_term(term, country, location, 10, cancel_check=cancel_check)
            
            if jobs:
                print(f"     üìä –ù–∞–π–¥–µ–Ω–æ –¥–ª—è '{term}': {len(jobs)} –≤–∞–∫–∞–Ω—Å–∏–π")
                all_jobs.extend(jobs)
            else:
                print(f"     ‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è '{term}'")
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            if i < len(localized_terms) - 1:
                time.sleep(0.3)
        
        # –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –±–∞—Ç—á–∞
        unique_jobs = []
        seen_ids = set()
        for job in all_jobs:
            if job.id not in seen_ids:
                unique_jobs.append(job)
                seen_ids.add(job.id)
        
        print(f"     ‚úÖ –ò—Ç–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö: {len(unique_jobs)} –≤–∞–∫–∞–Ω—Å–∏–π")
        return unique_jobs
    
    def normalize_city_name(self, city, country_code):
        """
        –£–º–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π –≥–æ—Ä–æ–¥–æ–≤
        –ü–æ–∫—Ä—ã–≤–∞–µ—Ç –¢–û–ü-15 –≥–æ—Ä–æ–¥–æ–≤ –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–µ + fallback
        """
        if not city or not isinstance(city, str):
            return None
        
        city_clean = city.strip().lower()
        if not city_clean:
            return None
        
        # –¢–û–ü –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º (—Ä—É—Å—Å–∫–∏–π ‚Üí –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
        POPULAR_CITIES = {
            'de': {  # –ì–µ—Ä–º–∞–Ω–∏—è
                '–±–µ—Ä–ª–∏–Ω': 'Berlin',
                '–º—é–Ω—Ö–µ–Ω': 'Munich', 
                '–≥–∞–º–±—É—Ä–≥': 'Hamburg',
                '–∫–µ–ª—å–Ω': 'Cologne',
                '—Ñ—Ä–∞–Ω–∫—Ñ—É—Ä—Ç': 'Frankfurt',
                '–¥—é—Å—Å–µ–ª—å–¥–æ—Ä—Ñ': 'D√ºsseldorf',
                '–¥–æ—Ä—Ç–º—É–Ω–¥': 'Dortmund',
                '—ç—Å—Å–µ–Ω': 'Essen',
                '–ª–µ–π–ø—Ü–∏–≥': 'Leipzig',
                '–±—Ä–µ–º–µ–Ω': 'Bremen',
                '–¥—Ä–µ–∑–¥–µ–Ω': 'Dresden',
                '–≥–∞–Ω–Ω–æ–≤–µ—Ä': 'Hannover',
                '–Ω—é—Ä–Ω–±–µ—Ä–≥': 'Nuremberg',
                '—à—Ç—É—Ç–≥–∞—Ä—Ç': 'Stuttgart'
            },
            'pl': {  # –ü–æ–ª—å—à–∞
                '–≤–∞—Ä—à–∞–≤–∞': 'Warsaw',
                '–∫—Ä–∞–∫–æ–≤': 'Krakow',
                '–≥–¥–∞–Ω—å—Å–∫': 'Gdansk',
                '–≤—Ä–æ—Ü–ª–∞–≤': 'Wroclaw',
                '–ø–æ–∑–Ω–∞–Ω—å': 'Poznan',
                '–ª–æ–¥–∑—å': 'Lodz',
                '–∫–∞—Ç–æ–≤–∏—Ü–µ': 'Katowice',
                '–±–µ–ª–æ—Å—Ç–æ–∫–æ': 'Bialystok',
                '–≥–¥—ã–Ω—è': 'Gdynia',
                '—á–µ–Ω—Å—Ç–æ—Ö–æ–≤–∞': 'Czestochowa',
                '—Ä–∞–¥–æ–º': 'Radom',
                '—Å–æ—Å–Ω–æ–≤–µ—Ü': 'Sosnowiec',
                '—Ç–æ—Ä—É–Ω—å': 'Torun'
            },
            'gb': {  # –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è
                '–ª–æ–Ω–¥–æ–Ω': 'London',
                '–º–∞–Ω—á–µ—Å—Ç–µ—Ä': 'Manchester',
                '–±–∏—Ä–º–∏–Ω–≥–µ–º': 'Birmingham',
                '–ª–∏–≤–µ—Ä–ø—É–ª—å': 'Liverpool',
                '–ª–∏–¥—Å': 'Leeds',
                '—à–µ—Ñ—Ñ–∏–ª–¥': 'Sheffield',
                '–±—Ä–∏—Å—Ç–æ–ª—å': 'Bristol',
                '—ç–¥–∏–Ω–±—É—Ä–≥': 'Edinburgh',
                '–≥–ª–∞–∑–≥–æ': 'Glasgow',
                '–∫–∞—Ä–¥–∏—Ñ—Ñ': 'Cardiff',
                '–±–µ–ª—Ñ–∞—Å—Ç': 'Belfast',
                '–Ω—å—é–∫–∞—Å–ª': 'Newcastle',
                '–Ω–æ—Ç—Ç–∏–Ω–≥–µ–º': 'Nottingham'
            },
            'nl': {  # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã
                '–∞–º—Å—Ç–µ—Ä–¥–∞–º': 'Amsterdam',
                '—Ä–æ—Ç—Ç–µ—Ä–¥–∞–º': 'Rotterdam', 
                '–≥–∞–∞–≥–∞': 'The Hague',
                '—É—Ç—Ä–µ—Ö—Ç': 'Utrecht',
                '—ç–π–Ω–¥—Ö–æ–≤–µ–Ω': 'Eindhoven',
                '—Ç–∏–ª–±—É—Ä–≥': 'Tilburg',
                '–≥—Ä–æ–Ω–∏–Ω–≥–µ–Ω': 'Groningen',
                '–∞–ª–º–µ—Ä–µ': 'Almere',
                '–±—Ä–µ–¥–∞': 'Breda',
                '–Ω–µ–π–º–µ–≥–µ–Ω': 'Nijmegen'
            },
            'fr': {  # –§—Ä–∞–Ω—Ü–∏—è
                '–ø–∞—Ä–∏–∂': 'Paris',
                '–º–∞—Ä—Å–µ–ª—å': 'Marseille',
                '–ª–∏–æ–Ω': 'Lyon',
                '—Ç—É–ª—É–∑–∞': 'Toulouse',
                '–Ω–∏—Ü—Ü–∞': 'Nice',
                '–Ω–∞–Ω—Ç': 'Nantes',
                '–º–æ–Ω–ø–µ–ª—å–µ': 'Montpellier',
                '—Å—Ç—Ä–∞—Å–±—É—Ä–≥': 'Strasbourg',
                '–±–æ—Ä–¥–æ': 'Bordeaux',
                '–ª–∏–ª–ª—å': 'Lille',
                '—Ä–µ–Ω–Ω': 'Rennes',
                '—Ä–µ–π–º—Å': 'Reims',
                '—Ç—É—Ä': 'Tours'
            },
            'at': {  # –ê–≤—Å—Ç—Ä–∏—è
                '–≤–µ–Ω–∞': 'Vienna',
                '–≥—Ä–∞—Ü': 'Graz',
                '–ª–∏–Ω—Ü': 'Linz',
                '–∑–∞–ª—å—Ü–±—É—Ä–≥': 'Salzburg',
                '–∏–Ω—Å–±—Ä—É–∫': 'Innsbruck',
                '–∫–ª–∞–≥–µ–Ω—Ñ—É—Ä—Ç': 'Klagenfurt'
            },
            'us': {  # –°–®–ê
                '–Ω—å—é-–π–æ—Ä–∫': 'New York',
                '–ª–æ—Å-–∞–Ω–¥–∂–µ–ª–µ—Å': 'Los Angeles',
                '—á–∏–∫–∞–≥–æ': 'Chicago',
                '—Ö—å—é—Å—Ç–æ–Ω': 'Houston',
                '—Ñ–∏–Ω–∏–∫—Å': 'Phoenix',
                '—Ñ–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è': 'Philadelphia',
                '—Å–∞–Ω-–∞–Ω—Ç–æ–Ω–∏–æ': 'San Antonio',
                '—Å–∞–Ω-–¥–∏–µ–≥–æ': 'San Diego',
                '–¥–∞–ª–ª–∞—Å': 'Dallas',
                '—Å–∞–Ω-—Ö–æ—Å–µ': 'San Jose',
                '–æ—Å—Ç–∏–Ω': 'Austin',
                '–º–∞–π–∞–º–∏': 'Miami',
                '—Å–∏—ç—Ç–ª': 'Seattle',
                '–±–æ—Å—Ç–æ–Ω': 'Boston'
            },
            'ca': {  # –ö–∞–Ω–∞–¥–∞
                '—Ç–æ—Ä–æ–Ω—Ç–æ': 'Toronto',
                '–º–æ–Ω—Ä–µ–∞–ª—å': 'Montreal',
                '–≤–∞–Ω–∫—É–≤–µ—Ä': 'Vancouver',
                '–∫–∞–ª–≥–∞—Ä–∏': 'Calgary',
                '—ç–¥–º–æ–Ω—Ç–æ–Ω': 'Edmonton',
                '–æ—Ç—Ç–∞–≤–∞': 'Ottawa',
                '–≤–∏–Ω–Ω–∏–ø–µ–≥': 'Winnipeg',
                '–∫–≤–µ–±–µ–∫': 'Quebec City'
            },
            'au': {  # –ê–≤—Å—Ç—Ä–∞–ª–∏—è
                '—Å–∏–¥–Ω–µ–π': 'Sydney',
                '–º–µ–ª—å–±—É—Ä–Ω': 'Melbourne',
                '–±—Ä–∏—Å–±–µ–Ω': 'Brisbane',
                '–ø–µ—Ä—Ç': 'Perth',
                '–∞–¥–µ–ª–∞–∏–¥–∞': 'Adelaide',
                '–∫–∞–Ω–±–µ—Ä—Ä–∞': 'Canberra'
            },
            'it': {  # –ò—Ç–∞–ª–∏—è
                '—Ä–∏–º': 'Rome',
                '–º–∏–ª–∞–Ω': 'Milan',
                '–Ω–µ–∞–ø–æ–ª—å': 'Naples',
                '—Ç—É—Ä–∏–Ω': 'Turin',
                '–ø–∞–ª–µ—Ä–º–æ': 'Palermo',
                '–≥–µ–Ω—É—è': 'Genoa',
                '–±–æ–ª–æ–Ω—å—è': 'Bologna',
                '—Ñ–ª–æ—Ä–µ–Ω—Ü–∏—è': 'Florence',
                '–≤–µ–Ω–µ—Ü–∏—è': 'Venice'
            },
            'es': {  # –ò—Å–ø–∞–Ω–∏—è
                '–º–∞–¥—Ä–∏–¥': 'Madrid',
                '–±–∞—Ä—Å–µ–ª–æ–Ω–∞': 'Barcelona',
                '–≤–∞–ª–µ–Ω—Å–∏—è': 'Valencia',
                '—Å–µ–≤–∏–ª—å—è': 'Seville',
                '—Å–∞—Ä–∞–≥–æ—Å–∞': 'Zaragoza',
                '–º–∞–ª–∞–≥–∞': 'Malaga',
                '–º—É—Ä—Å–∏—è': 'Murcia',
                '–ø–∞–ª—å–º–∞': 'Palma',
                '–±–∏–ª—å–±–∞–æ': 'Bilbao'
            }
        }
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ –Ω–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ
        country_cities = POPULAR_CITIES.get(country_code, {})
        if city_clean in country_cities:
            normalized = country_cities[city_clean]
            print(f"üåç –ì–æ—Ä–æ–¥ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω: '{city}' ‚Üí '{normalized}' –¥–ª—è {country_code}")
            return normalized
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è (–¥–ª—è –æ–ø–µ—á–∞—Ç–æ–∫)
        for ru_name, en_name in country_cities.items():
            if city_clean in ru_name or ru_name in city_clean:
                print(f"üåç –ì–æ—Ä–æ–¥ –Ω–∞–π–¥–µ–Ω —á–∞—Å—Ç–∏—á–Ω–æ: '{city}' ‚Üí '{en_name}' –¥–ª—è {country_code}")
                return en_name
        
        # 3. –ï—Å–ª–∏ —É–∂–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
        if city.encode('ascii', errors='ignore').decode('ascii') == city:
            print(f"üåç –ì–æ—Ä–æ–¥ —É–∂–µ –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ: '{city}' –¥–ª—è {country_code}")
            return city
        
        # 4. Fallback - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª (–ø—É—Å—Ç—å API –ø–æ–ø—Ä–æ–±—É–µ—Ç)
        print(f"‚ö†Ô∏è –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ª–æ–≤–∞—Ä–µ: '{city}' –¥–ª—è {country_code}, –ø–µ—Ä–µ–¥–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å")
        return city
        
    def _search_single_term(
    self,
    keywords: str,
    country: str,
    location: str = '',
    max_results: int = 25,
    filter_term: str = None,
    cancel_check=None
) -> List[JobVacancy]:
        """–ü–æ–∏—Å–∫ –ø–æ –æ–¥–Ω–æ–º—É —Ç–µ—Ä–º–∏–Ω—É —Å rate limiting –∏ —É–≤–∞–∂–µ–Ω–∏–µ–º –º—è–≥–∫–æ–π –æ—Ç–º–µ–Ω—ã."""

        # —Ä–∞–Ω–Ω–∏–π –≤—ã—Ö–æ–¥ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ
        if cancel_check and cancel_check():
            return []

        url = f"https://api.adzuna.com/v1/api/jobs/{country}/search/1"

        params = {
            'app_id': self.app_id,
            'app_key': self.app_key,
            'what': keywords,
            'results_per_page': min(max_results, 50),
            'sort_by': 'date'
        }

        if location:
            normalized_location = self.normalize_city_name(location, country)
            params['where'] = normalized_location

        print(f"     üåê API URL: {url}")
        print(f"     üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: what='{keywords}', where='{location}'")

        # Rate limiting ‚Äî –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ
        ok = self.rate_limiter.wait_if_needed(cancel_check=cancel_check) if hasattr(self, 'rate_limiter') else True
        if cancel_check and cancel_check():
            return total_jobs
        if ok is False:
            return total_jobs


        try:
            response = requests.get(url, params=params, timeout=15)
            self.stats['api_requests'] += 1
            print(f"     üì° API –æ—Ç–≤–µ—Ç: {response.status_code}")

            if response.status_code == 200:
                data = response.json()
                results = data.get('results', [])
                print(f"     üìä –ü–æ–ª—É—á–µ–Ω–æ –æ—Ç API: {len(results)} –≤–∞–∫–∞–Ω—Å–∏–π")

                jobs: List[JobVacancy] = []
                for job_data in results:
                    if cancel_check and cancel_check():
                        break
                    job = self._normalize_job_data(job_data, country, filter_term or keywords)
                    if job:
                        jobs.append(job)
                return jobs

            else:
                try:
                    data = response.json()
                except Exception:
                    data = {}

                exc = (data or {}).get("exception", "")
                if exc == "UNSUPPORTED_COUNTRY" or "UNSUPPORTED_COUNTRY" in response.text:
                    print(f"‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∞ '{country}' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è Adzuna API. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º‚Ä¶")
                    return []
                print(f"‚ùå API –≤–µ—Ä–Ω—É–ª {response.status_code}: {response.text[:200]}")
                return []

        except requests.Timeout:
            print("‚ö†Ô∏è Adzuna: —Ç–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç —Ç–µ—Ä–º")
            return []
        except Exception as e:
            print(f"‚ùå Adzuna: –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            return []


    
    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
    def _normalize_job_data(self, raw_job: Dict, country: str, search_term: str) -> Optional[JobVacancy]:
        """–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –° –ü–†–û–í–ï–†–ö–û–ô –†–ï–õ–ï–í–ê–ù–¢–ù–û–°–¢–ò"""
        try:
            job_id = str(raw_job.get('id', ''))
            title = raw_job.get('title', 'No title')
            
            company_data = raw_job.get('company', {})
            company = company_data.get('display_name', 'No company') if company_data else 'No company'
            
            location_data = raw_job.get('location', {})
            location = location_data.get('display_name', 'No location') if location_data else 'No location'
            
            description = raw_job.get('description', raw_job.get('snippet', 'No description'))
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ (–≤–∞—à–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–æ–≥–∏–∫–∞)
            if not self._is_relevant_job(title, description, search_term):
                return None
            
            salary = self._format_salary(raw_job, country)
            apply_url = raw_job.get('redirect_url', '')
            posted_date = raw_job.get('created', 'Unknown date')
            job_type = raw_job.get('contract_type', raw_job.get('contract_time', 'Not specified'))
            
            language_req = self._determine_language_requirement(title, description, search_term)
            refugee_friendly = self._is_refugee_friendly(title, description, search_term)
            
            return JobVacancy(
                id=job_id,
                title=title,
                company=company,
                location=location,
                salary=salary,
                description=description,
                apply_url=apply_url,
                source='adzuna',
                posted_date=posted_date,
                country=self.countries[country]['name'],
                job_type=job_type,
                language_requirement=language_req,
                refugee_friendly=refugee_friendly
            )
            
        except Exception as e:
            return None
    
    def _is_relevant_job(self, job_title: str, job_description: str, search_term: str) -> bool:
        """
        üåç –ü–û–õ–ù–ê–Ø –ú–£–õ–¨–¢–ò–Ø–ó–´–ß–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –†–ï–õ–ï–í–ê–ù–¢–ù–û–°–¢–ò v8
        –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 18 —Å—Ç—Ä–∞–Ω –∏ 12 —è–∑—ã–∫–æ–≤: EN, DE, FR, ES, IT, NL, PL, CZ, SK, SE, NO, DK
        """
        if search_term == 'search_for_other_jobs':
            return True

        title_lower = job_title.lower()
        description_lower = job_description.lower()
        search_lower = search_term.lower()
        combined_text = f"{title_lower} {description_lower}"

        # ===== üá∫üá¶ –£–ö–†–ê–ò–ù–°–ö–ò–ï –ë–ï–ñ–ï–ù–¶–´ (–í–°–ï –Ø–ó–´–ö–ò) =====
        refugee_terms = [
            # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
            'ukrain', 'refugee', 'asylum', 'displaced', 'humanitarian',
            # –ù–µ–º–µ—Ü–∫–∏–π  
            'fl√ºchtling', 'ukraine', 'ukrainisch', 'asyl', 'gefl√ºchtet',
            # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
            'r√©fugi√©', 'ukrainien', 'demandeur asile', 'd√©plac√©',
            # –ò—Å–ø–∞–Ω—Å–∫–∏–π
            'refugiado', 'ucraniano', 'asilo', 'desplazado',
            # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
            'profugo', 'rifugiato', 'ucraino', 'richiedente asilo',
            # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
            'vluchteling', 'oekra√Øens', 'asielzoeker',
            # –ü–æ–ª—å—Å–∫–∏–π
            'uchod≈∫ca', 'ukrai≈Ñski', 'azylant', 'przesiedlony',
            # –ß–µ—à—Å–∫–∏–π
            'uprchl√≠k', 'ukrajinsk√Ω', 'azylant', 'p≈ôes√≠dlen√Ω',
            # –°–ª–æ–≤–∞—Ü–∫–∏–π
            'uteƒçenec', 'ukrajinsk√Ω', 'azylant',
            # –®–≤–µ–¥—Å–∫–∏–π
            'flykting', 'ukrainsk', 'asyls√∂kande',
            # –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π
            'flyktning', 'ukrainsk', 'asyls√∏ker',
            # –î–∞—Ç—Å–∫–∏–π
            'flygtning', 'ukrainsk', 'asylans√∏ger'
        ]
        if any(term in search_lower for term in refugee_terms):
            if any(term in combined_text for term in refugee_terms):
                return True

        # ===== üçΩÔ∏è –û–ë–©–ï–ü–ò–¢ –ò –¢–û–†–ì–û–í–õ–Ø (18 –°–¢–†–ê–ù) =====
        food_retail_searches = [
            # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π (GB, US, CA, AU)
            'waiter', 'waitress', 'server', 'cashier', 'shop assistant', 'sales assistant', 
            'dishwasher', 'cook', 'chef', 'bartender', 'retail',
            # –ù–µ–º–µ—Ü–∫–∏–π (DE, AT, CH)
            'kellner', 'kellnerin', 'bedienung', 'kassierer', 'verk√§ufer', 'sp√ºler', 
            'koch', 'barkeeper', 'einzelhandel',
            # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π (FR, BE, CH, CA)
            'serveur', 'serveuse', 'caissier', 'vendeur', 'plongeur', 'cuisinier', 
            'barman', 'commerce',
            # –ò—Å–ø–∞–Ω—Å–∫–∏–π (ES)
            'camarero', 'camarera', 'cajero', 'vendedor', 'friegaplatos', 'cocinero', 
            'barman', 'comercio',
            # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π (IT)
            'cameriere', 'cameriera', 'cassiere', 'commesso', 'lavapiatti', 'cuoco', 
            'barista', 'commercio',
            # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π (NL, BE)
            'ober', 'serveerster', 'kassi√®re', 'verkoper', 'afwasser', 'kok', 
            'barkeeper', 'winkel',
            # –ü–æ–ª—å—Å–∫–∏–π (PL)
            'kelner', 'kelnerka', 'kasjer', 'sprzedawca', 'zmywacz', 'kucharz', 
            'barman', 'handel',
            # –ß–µ—à—Å–∫–∏–π (CZ)
            'ƒç√≠≈°n√≠k', 'ƒç√≠≈°nice', 'pokladn√≠k', 'prodavaƒç', 'um√Ωvaƒç', 'kucha≈ô', 
            'barman', 'obchod',
            # –°–ª–æ–≤–∞—Ü–∫–∏–π (SK)
            'ƒça≈°n√≠k', 'ƒça≈°n√≠ƒçka', 'pokladn√≠k', 'predavaƒç', 'um√Ωvaƒç', 'kuch√°r',
            # –®–≤–µ–¥—Å–∫–∏–π (SE)
            'servit√∂r', 'servitris', 'kass√∂r', 's√§ljare', 'diskare', 'kock', 'bartender',
            # –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π (NO)
            'servit√∏r', 'kasserer', 'selger', 'oppvasker', 'kokk', 'bartender',
            # –î–∞—Ç—Å–∫–∏–π (DK)
            'tjener', 'kasserer', 's√¶lger', 'opvasker', 'kok', 'bartender'
        ]
        
        if any(term in search_lower for term in food_retail_searches):
            relevant = [
                # ========== –û–§–ò–¶–ò–ê–ù–¢–´/–°–ï–†–í–ò–° ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π (GB, US, CA, AU)
                'waiter', 'waitress', 'server', 'food service', 'restaurant staff', 
                'hospitality', 'front of house', 'dining', 'service staff', 'table service',
                'host', 'hostess', 'floor staff', 'waiting staff',
                
                # –ù–µ–º–µ—Ü–∫–∏–π (DE, AT, CH)
                'kellner', 'kellnerin', 'bedienung', 'servicekraft', 'servicemitarbeiter', 
                'gastronomie', 'restaurant', 'cafe', 'bistro', 'service', 'bewirtung',
                'gastronomiemitarbeiter', 'restaurantmitarbeiter', 'servierkraft',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π (FR, BE, CH, CA)
                'serveur', 'serveuse', 'gar√ßon', 'service', 'restauration', 'brasserie', 
                'caf√©', 'bistrot', 'personnel salle', 'agent service', 'h√¥tesse',
                'commis salle', 'aide serveur',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π (ES)
                'camarero', 'camarera', 'mesero', 'mesera', 'servicio', 'restaurante',
                'hosteler√≠a', 'bar', 'cafeter√≠a', 'personal sala', 'atenci√≥n cliente',
                'auxiliar hosteler√≠a',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π (IT)
                'cameriere', 'cameriera', 'addetto sala', 'servizio', 'ristorazione',
                'ristorante', 'bar', 'caff√®', 'personale sala', 'addetto servizio',
                'commesso bar',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π (NL, BE)
                'ober', 'serveerster', 'bediening', 'horeca', 'restaurant', 'caf√©',
                'servicemedewerker', 'gastheer', 'gastvrouw', 'horecamedewerker',
                
                # –ü–æ–ª—å—Å–∫–∏–π (PL)
                'kelner', 'kelnerka', 'obs≈Çuga', 'serwis', 'restauracja', 'gastronomia',
                'bar', 'kawiarnia', 'pracownik sali', 'obs≈Çuga klienta',
                
                # –ß–µ—à—Å–∫–∏–π (CZ)
                'ƒç√≠≈°n√≠k', 'ƒç√≠≈°nice', 'obsluha', 'servis', 'restaurace', 'gastronomie',
                'bar', 'kav√°rna', 'obsluha host≈Ø', 'person√°l',
                
                # –°–ª–æ–≤–∞—Ü–∫–∏–π (SK)
                'ƒça≈°n√≠k', 'ƒça≈°n√≠ƒçka', 'obsluha', 'servis', 're≈°taur√°cia', 'gastron√≥mia',
                
                # –®–≤–µ–¥—Å–∫–∏–π (SE)
                'servit√∂r', 'servitris', 'serverare', 'restaurang', 'caf√©', 'service',
                'v√§rd', 'v√§rdinna', 'serveringspersonal',
                
                # –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π (NO)
                'servit√∏r', 'tjener', 'restaurant', 'kaf√©', 'service', 'vertskap',
                'serveringspersonale',
                
                # –î–∞—Ç—Å–∫–∏–π (DK)
                'tjener', 'serveringspersonale', 'restaurant', 'caf√©', 'service',
                'v√¶rt', 'v√¶rtinde',

                # ========== –ö–ê–°–°–ò–†–´/–ü–†–û–î–ê–í–¶–´ ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'cashier', 'till operator', 'checkout', 'shop assistant', 'sales assistant',
                'retail assistant', 'store clerk', 'sales associate', 'shop worker',
                'customer service', 'retail', 'supermarket', 'store',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'kassierer', 'kassiererin', 'verk√§ufer', 'verk√§uferin', 'einzelhandel',
                'verkaufsmitarbeiter', 'handelsmitarbeiter', 'supermarkt', 'laden',
                'verkaufsaushilfe', 'kassenkraft', 'filialarbeiter',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'caissier', 'caissi√®re', 'vendeur', 'vendeuse', 'commerce', 'magasin',
                'grande distribution', 'supermarch√©', 'employ√© libre service',
                'conseiller vente', 'h√¥tesse caisse',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'cajero', 'cajera', 'vendedor', 'vendedora', 'dependiente', 'comercio',
                'supermercado', 'tienda', 'auxiliar ventas', 'reponedor',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'cassiere', 'cassiera', 'commesso', 'commessa', 'addetto vendite',
                'commercio', 'supermercato', 'negozio', 'addetto cassa',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'kassi√®re', 'kassamedewerker', 'verkoper', 'verkoopster', 'winkelmedewerker',
                'retail', 'supermarkt', 'winkel', 'caissier',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'kasjer', 'kasjerka', 'sprzedawca', 'sprzedawczyni', 'handel',
                'sklep', 'supermarket', 'obs≈Çuga kasy', 'pracownik sklepu',
                
                # –ß–µ—à—Å–∫–∏–π
                'pokladn√≠k', 'pokladn√≠', 'prodavaƒç', 'prodavaƒçka', 'obchod',
                'supermarket', 'prodejna', 'obsluha pokladny',
                
                # –°–ª–æ–≤–∞—Ü–∫–∏–π
                'pokladn√≠k', 'predavaƒç', 'predavaƒçka', 'obchod', 'supermarket',
                
                # –®–≤–µ–¥—Å–∫–∏–π
                'kass√∂r', 'kass√∂rska', 's√§ljare', 'butik', 'aff√§r', 'ICA', 'Coop',
                'butikspersonal', 'butiksbitr√§de',
                
                # –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π
                'kasserer', 'selger', 'butikk', 'handel', 'Rema', 'KIWI',
                'butikkmedarbeider',
                
                # –î–∞—Ç—Å–∫–∏–π
                'kasserer', 's√¶lger', 'butik', 'Netto', 'Bilka', 'butikspersonale',

                # ========== –ö–£–•–ù–Ø ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'cook', 'chef', 'kitchen assistant', 'prep cook', 'line cook', 'dishwasher',
                'kitchen porter', 'kitchen staff', 'commis chef', 'sous chef',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'koch', 'k√∂chin', 'k√ºchenhilfe', 'k√ºchenhelfer', 'sp√ºler', 'sp√ºlkraft',
                'k√ºchenmitarbeiter', 'chefkoch', 'hilfskoch',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'cuisinier', 'cuisini√®re', 'commis cuisine', 'aide cuisinier', 'plongeur',
                'personnel cuisine', 'chef cuisine', 'second cuisine',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'cocinero', 'cocinera', 'ayudante cocina', 'friegaplatos', 'personal cocina',
                'pinche cocina', 'jefe cocina',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'cuoco', 'cuoca', 'aiuto cuoco', 'lavapiatti', 'addetto cucina',
                'commis', 'chef', 'sous chef',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'kok', 'keukenhulp', 'afwasser', 'keukenmedewerker', 'chef-kok',
                'keukenassistent',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'kucharz', 'kucharka', 'pomoc kuchenna', 'zmywacz', 'pracownik kuchni',
                'pomocnik kucharza', 'szef kuchni',
                
                # –ß–µ—à—Å–∫–∏–π
                'kucha≈ô', 'kucha≈ôka', 'kuchy≈àsk√Ω pomocn√≠k', 'um√Ωvaƒç', 'kuchynƒõ',
                'pomocn√≠k kucha≈ôe', '≈°√©fkucha≈ô',
                
                # –°–ª–æ–≤–∞—Ü–∫–∏–π
                'kuch√°r', 'kuch√°rka', 'kuchynsk√Ω pomocn√≠k', 'um√Ωvaƒç',
                
                # –°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–µ —è–∑—ã–∫–∏
                'kock', 'k√∂kspersonal', 'diskare', 'k√∂ksbistr√•nd', # –®–≤–µ–¥—Å–∫–∏–π
                'kokk', 'kj√∏kkenpersonell', 'oppvasker', # –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π  
                'kok', 'k√∏kkenpersonale', 'opvasker', # –î–∞—Ç—Å–∫–∏–π

                # ========== –ë–ê–†–ú–ï–ù–´ ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'bartender', 'barman', 'barmaid', 'mixologist', 'bar staff',
                # –ù–µ–º–µ—Ü–∫–∏–π
                'barkeeper', 'barmann', 'barmixer', 'barkraft',
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'barman', 'barmaid', 'mixologue', 'serveur bar',
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'barman', 'cantinero', 'coctelero', 'camarero bar',
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'barista', 'barman', 'addetto bar', 'bartender',
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'barkeeper', 'barman', 'bartender', 'barmedewerker',
                # –ü–æ–ª—å—Å–∫–∏–π
                'barman', 'barista', 'obs≈Çuga baru', 'bartender',
                # –ß–µ—à—Å–∫–∏–π
                'barman', 'barmanka', 'obsluha baru', 'bartender',
                # –û—Å—Ç–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏
                'bartender', 'barman', 'barmanka', # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ

                # ========== –û–ë–©–ò–ï –¢–ï–†–ú–ò–ù–´ ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'part time', 'full time', 'student job', 'temporary', 'seasonal',
                'entry level', 'no experience', 'trainee',
                # –ù–µ–º–µ—Ü–∫–∏–π
                'aushilfe', 'teilzeit', 'vollzeit', 'nebenjob', 'minijob', 'student',
                'ungelernt', 'ohne erfahrung', 'praktikant',
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'temps partiel', 'temps plein', 'saisonnier', '√©tudiant', 'd√©butant',
                'sans exp√©rience', 'stagiaire',
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'tiempo parcial', 'jornada completa', 'estudiante', 'temporal',
                'sin experiencia', 'principiante', 'becario',
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'part-time', 'tempo pieno', 'studente', 'stagionale', 'senza esperienza',
                'principiante', 'stagista',
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'parttime', 'fulltime', 'student', 'tijdelijk', 'zonder ervaring',
                'starter', 'stagiair',
                # –ü–æ–ª—å—Å–∫–∏–π
                'praca tymczasowa', 'etat', 'student', 'sezonowa', 'bez do≈õwiadczenia',
                'poczƒÖtkujƒÖcy', 'praktykant',
                # –ß–µ—à—Å–∫–∏–π
                'ƒç√°steƒçn√Ω √∫vazek', 'pln√Ω √∫vazek', 'student', 'sez√≥nn√≠',
                'bez zku≈°enost√≠', 'zaƒç√°teƒçn√≠k', 'praktikant',
                # –°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–µ
                'deltid', 'heltid', 'student', 'tillf√§llig', 'utan erfarenhet', # –®–≤–µ–¥—Å–∫–∏–π
                'deltid', 'heltid', 'student', 'midlertidig', 'uten erfaring', # –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π
                'deltid', 'fuldtid', 'studerende', 'midlertidig', 'uden erfaring' # –î–∞—Ç—Å–∫–∏–π
            ]
            
            # ========== –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô BLACKLIST ==========
            irrelevant = [
                # === –£–ü–†–ê–í–õ–ï–ù–ß–ï–°–ö–ò–ï –î–û–õ–ñ–ù–û–°–¢–ò ===
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'manager', 'director', 'head of', 'chief', 'supervisor', 'coordinator',
                'team leader', 'team lead', 'senior manager', 'general manager',
                'assistant manager', 'deputy manager', 'area manager', 'regional manager',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'manager', 'leiter', 'f√ºhrung', 'teamleiter', 'abteilungsleiter',
                'gesch√§ftsf√ºhrer', 'bereichsleiter', 'stellvertretender leiter',
                'regionalleiter', 'filialleiter', 'verkaufsleiter',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'directeur', 'responsable', 'chef √©quipe', 'coordinateur', 'superviseur',
                'directeur adjoint', 'chef service', 'responsable secteur',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'director', 'jefe', 'gerente', 'coordinador', 'supervisor',
                'responsable', 'encargado', 'jefe equipo', 'jefe ventas',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'direttore', 'responsabile', 'capo', 'coordinatore', 'supervisore',
                'capo reparto', 'capo squadra', 'responsabile vendite',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'manager', 'leidinggevende', 'teamleider', 'afdelingshoofd',
                'regiomanager', 'filiaalmanager', 'verkoopleider',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'kierownik', 'dyrektor', 'szef', 'koordynator', 'manager',
                'kierownik zespo≈Çu', 'kierownik sprzeda≈ºy', 'lider',
                
                # –ß–µ—à—Å–∫–∏–π
                'vedouc√≠', '≈ôeditel', 'mana≈æer', 'koordin√°tor', 'supervizor',
                'vedouc√≠ t√Ωmu', 'vedouc√≠ prodeje',
                
                # –°–ª–æ–≤–∞—Ü–∫–∏–π
                'ved√∫ci', 'riaditeƒæ', 'mana≈æ√©r', 'koordin√°tor',
                
                # –°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–µ
                'chef', 'ledare', 'ansvarig', 'f√∂rest√•ndare', # –®–≤–µ–¥—Å–∫–∏–π
                'leder', 'sjef', 'ansvarlig', # –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π
                'leder', 'chef', 'ansvarlig', # –î–∞—Ç—Å–∫–∏–π

                # === IT –ò –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï ===
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'software', 'developer', 'programmer', 'engineer', 'technical', 'it ',
                'system', 'network', 'database', 'web developer', 'software engineer',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'software', 'entwickler', 'programmierer', 'ingenieur', 'technisch',
                'system', 'netzwerk', 'datenbank', 'it-', 'informatik',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'logiciel', 'd√©veloppeur', 'programmeur', 'ing√©nieur', 'technique',
                'syst√®me', 'r√©seau', 'informatique',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'software', 'desarrollador', 'programador', 'ingeniero', 't√©cnico',
                'sistema', 'inform√°tico',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'software', 'sviluppatore', 'programmatore', 'ingegnere', 'tecnico',
                'sistema', 'informatico',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'software', 'ontwikkelaar', 'programmeur', 'ingenieur', 'technisch',
                'systeem', 'netwerk',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'software', 'programista', 'developer', 'in≈ºynier', 'techniczny',
                'system', 'informatyk',
                
                # –ß–µ—à—Å–∫–∏–π
                'software', 'v√Ωvoj√°≈ô', 'program√°tor', 'in≈æen√Ωr', 'technick√Ω',
                'syst√©m', 'informatik',

                # === –ü–†–û–î–ê–ñ–ò B2B –ò –í–´–°–û–ö–ò–ô –£–†–û–í–ï–ù–¨ ===
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'account manager', 'sales manager', 'business development', 'key account',
                'sales representative', 'account executive', 'commercial',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'account manager', 'vertriebsleiter', 'verkaufsleiter', 'key account',
                'au√üendienst', 'vertriebsmitarbeiter', 'business development',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'account manager', 'commercial', 'business development', 'grands comptes',
                'responsable commercial', 'charg√© affaires',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'account manager', 'comercial', 'desarrollo negocio', 'cuentas clave',
                'representante ventas', 'ejecutivo cuentas',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'account manager', 'commerciale', 'sviluppo business', 'account',
                'responsabile vendite', 'agente commerciale',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'account manager', 'handlowiec', 'przedstawiciel', 'sprzeda≈º zewnƒôtrzna',
                'key account', 'business development',
                
                # –ß–µ—à—Å–∫–∏–π
                'account manager', 'obchodn√≠k', 'obchodn√≠ z√°stupce', 'key account',

                # === –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï/–ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ï ===
                'consultant', 'specialist', 'expert', 'professional', 'senior',
                'konsultant', 'spezialist', 'experte', 'fachkraft', 'senior',
                'consultant', 'sp√©cialiste', 'expert', 'professionnel',
                'consultor', 'especialista', 'experto', 'profesional',
                'consulente', 'specialista', 'esperto', 'professionista',
                'consultant', 'specialist', 'expert', 'professional',
                'konsultant', 'specjalista', 'ekspert', 'profesjonalista',
                'konzultant', 'specialista', 'expert', 'profesion√°l'
            ]
            
            has_relevant = any(term in title_lower for term in relevant)
            has_irrelevant = any(term in title_lower for term in irrelevant)
            
            if has_relevant and not has_irrelevant:
                return True

        # ===== üöó –¢–†–ê–ù–°–ü–û–†–¢ –ò –î–û–°–¢–ê–í–ö–ê (18 –°–¢–†–ê–ù) =====
        transport_searches = [
            # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
            'driver', 'taxi driver', 'delivery driver', 'courier', 'truck driver', 'bus driver',
            # –ù–µ–º–µ—Ü–∫–∏–π
            'fahrer', 'taxifahrer', 'lieferfahrer', 'kurier', 'lkw fahrer', 'busfahrer',
            # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
            'chauffeur', 'conducteur', 'livreur', 'coursier', 'routier', 'chauffeur bus',
            # –ò—Å–ø–∞–Ω—Å–∫–∏–π
            'conductor', 'taxista', 'repartidor', 'mensajero', 'camionero', 'conductor autob√∫s',
            # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
            'autista', 'tassista', 'corriere', 'fattorino', 'camionista', 'autista autobus',
            # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
            'chauffeur', 'taxichauffeur', 'bezorger', 'koerier', 'vrachtwagenchauffeur', 'buschauffeur',
            # –ü–æ–ª—å—Å–∫–∏–π
            'kierowca', 'taks√≥wkarz', 'kurier', 'dostawca', 'kierowca ciƒô≈ºar√≥wki', 'kierowca autobusu',
            # –ß–µ—à—Å–∫–∏–π
            '≈ôidiƒç', 'taxik√°≈ô', 'kur√Ωr', 'rozvozce', '≈ôidiƒç n√°kladn√≠ho', '≈ôidiƒç autobusu',
            # –°–ª–æ–≤–∞—Ü–∫–∏–π
            'vodiƒç', 'taxik√°r', 'kuri√©r', 'rozvozca', 'vodiƒç n√°kladn√©ho',
            # –®–≤–µ–¥—Å–∫–∏–π
            'f√∂rare', 'taxif√∂rare', 'budf√∂rare', 'kur√≠r', 'lastbilsf√∂rare', 'bussf√∂rare',
            # –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π
            'sj√•f√∏r', 'taxisj√•f√∏r', 'budsj√•f√∏r', 'kur√©r', 'lastebilsj√•f√∏r', 'bussj√•f√∏r',
            # –î–∞—Ç—Å–∫–∏–π
            'chauff√∏r', 'taxichauff√∏r', 'budchauff√∏r', 'kur√©r', 'lastbilchauff√∏r', 'buschauff√∏r'
        ]
        
        if any(term in search_lower for term in transport_searches):
            relevant = [
                # ========== –í–û–î–ò–¢–ï–õ–ò ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'driver', 'chauffeur', 'operator', 'delivery', 'transport', 'logistics',
                'taxi', 'uber', 'lyft', 'van', 'truck', 'lorry', 'hgv', 'bus', 'coach',
                'driving', 'courier', 'freight', 'haulage',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'fahrer', 'kraftfahrer', 'berufskraftfahrer', 'fahrzeugf√ºhrer',
                'taxifahrer', 'busfahrer', 'lkwfahrer', 'lieferfahrer', 'kurier',
                'speditionsfahrer', 'transportfahrer', 'auslieferungsfahrer',
                'spedition', 'logistik', 'transport', 'fahrdienst', 'mobilit√§t',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'chauffeur', 'conducteur', 'livreur', 'coursier', 'transporteur',
                'taxi', 'camion', 'poids lourd', 'livraison', 'logistique',
                'transport', 'distribution', 'v√©hicule', 'conduite',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'conductor', 'chofer', 'taxista', 'repartidor', 'mensajero',
                'camionero', 'transportista', 'log√≠stica', 'reparto', 'distribuci√≥n',
                'veh√≠culo', 'conducci√≥n', 'entrega',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'autista', 'conducente', 'tassista', 'corriere', 'fattorino',
                'camionista', 'autotrasportatore', 'trasporto', 'logistica', 'consegne',
                'distribuzione', 'veicolo', 'guida',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'chauffeur', 'bestuurder', 'taxichauffeur', 'bezorger', 'koerier',
                'vrachtwagenchauffeur', 'buschauffeur', 'logistiek', 'transport',
                'bezorging', 'distributie', 'voertuig', 'rijden',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'kierowca', 'szofer', 'taks√≥wkarz', 'kurier', 'dostawca',
                'przewo≈∫nik', 'spedytor', 'transport', 'logistyka', 'spedycja',
                'dostawa', 'dystrybucja', 'pojazd', 'jazda',
                
                # –ß–µ—à—Å–∫–∏–π
                '≈ôidiƒç', '≈°of√©r', 'taxik√°≈ô', 'kur√Ωr', 'rozvozce',
                'dopravce', 'spedice', 'logistik', 'p≈ôeprava', 'doprava',
                'distribuce', 'vozidlo', '≈ô√≠zen√≠',
                
                # –°–ª–æ–≤–∞—Ü–∫–∏–π
                'vodiƒç', '≈°of√©r', 'taxik√°r', 'kuri√©r', 'rozvozca',
                'dopravca', 'logistika', 'preprava', 'distrib√∫cia',
                
                # –®–≤–µ–¥—Å–∫–∏–π
                'f√∂rare', 'chauff√∂r', 'taxif√∂rare', 'budf√∂rare', 'kur√≠r',
                'lastbilsf√∂rare', 'bussf√∂rare', 'transport', 'logistik',
                'leverans', 'distribution', 'fordon', 'k√∂rning',
                
                # –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π
                'sj√•f√∏r', 'taxisj√•f√∏r', 'budsj√•f√∏r', 'kur√©r', 'lastebilsj√•f√∏r',
                'bussj√•f√∏r', 'transport', 'logistikk', 'levering', 'distribusjon',
                
                # –î–∞—Ç—Å–∫–∏–π
                'chauff√∏r', 'taxichauff√∏r', 'budchauff√∏r', 'kur√©r', 'lastbilchauff√∏r',
                'buschauff√∏r', 'transport', 'logistik', 'levering', 'distribution',

                # ========== –î–û–°–¢–ê–í–ö–ê –ò –ö–£–†–¨–ï–†–´ ==========
                # –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –±—Ä–µ–Ω–¥—ã
                'uber', 'bolt', 'glovo', 'deliveroo', 'foodora', 'wolt', 'just eat',
                'dhl', 'ups', 'fedex', 'dpd', 'gls', 'hermes', 'amazon',
                
                # –î–æ—Å—Ç–∞–≤–∫–∞ –µ–¥—ã
                'food delivery', 'meal delivery', 'restaurant delivery',
                'essenslieferung', 'pizza lieferung', 'essen fahren',
                'livraison repas', 'livraison restauration', 'livraison pizza',
                'entrega comida', 'reparto comida', 'entrega pizza',
                'consegna cibo', 'consegna pizza', 'delivery food',
                'bezorging eten', 'maaltijdbezorging', 'pizza bezorging',
                'dostawa jedzenia', 'dostawa pizzy', 'rozwo≈ºenie jedzenia',
                'rozvoz j√≠dla', 'rozvoz pizzy', 'don√°≈°ka jedla',
                'matleverans', 'pizzaleverans', 'mat levering', 'pizza levering',
                'madlevering', 'pizza levering',

                # ========== –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò ==========
                # –í–µ–ª–æ–∫—É—Ä—å–µ—Ä—ã
                'bicycle', 'bike', 'cyclist', 'rider', 'fahrrad', 'rad', 'v√©lo',
                'bicicleta', 'bici', 'fiets', 'rower', 'kolo', 'cykel', 'sykkel',
                
                # –ú–æ—Ç–æ–∫—É—Ä—å–µ—Ä—ã
                'motorcycle', 'motorbike', 'scooter', 'motorrad', 'roller',
                'moto', 'scooter', 'moto', 'motor', 'motocykl', 'motocykl',
                'motorcykel', 'motorsykkel', 'motorcykel'
            ]
            
            irrelevant = [
                # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –æ—Ñ–∏—Å
                'dispatcher', 'coordinator', 'manager', 'office', 'planning', 'admin',
                'disponent', 'koordinator', 'b√ºro', 'verwaltung', 'planung',
                'r√©partiteur', 'coordinateur', 'bureau', 'planning', 'administration',
                'coordinador', 'oficina', 'planificaci√≥n', 'administraci√≥n',
                'coordinatore', 'ufficio', 'pianificazione', 'amministrazione',
                'co√∂rdinator', 'kantoor', 'planning', 'administratie',
                'dyspozytor', 'koordynator', 'biuro', 'planowanie', 'administracja',
                'dispeƒçer', 'koordin√°tor', 'kancel√°≈ô', 'pl√°nov√°n√≠', 'spr√°va',
                
                # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
                'mechanic', 'maintenance', 'repair', 'technician',
                'mechaniker', 'wartung', 'reparatur', 'techniker',
                'm√©canicien', 'entretien', 'r√©paration', 'technicien',
                'mec√°nico', 'mantenimiento', 'reparaci√≥n', 't√©cnico',
                'meccanico', 'manutenzione', 'riparazione', 'tecnico',
                'monteur', 'onderhoud', 'reparatie', 'technicus',
                'mechanik', 'konserwacja', 'naprawa', 'technik',
                'mechanik', '√∫dr≈æba', 'oprava', 'technik'
            ]
            
            has_relevant = any(term in title_lower for term in relevant)
            has_irrelevant = any(term in title_lower for term in irrelevant)
            
            if has_relevant and not has_irrelevant:
                return True

        # ===== üèóÔ∏è –°–¢–†–û–ò–¢–ï–õ–¨–°–¢–í–û –ò –°–ö–õ–ê–î (18 –°–¢–†–ê–ù) =====
        construction_searches = [
            # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
            'construction worker', 'builder', 'warehouse worker', 'packer', 'loader',
            'factory worker', 'production worker', 'labourer', 'helper',
            # –ù–µ–º–µ—Ü–∫–∏–π
            'bauarbeiter', 'handwerker', 'lagerarbeiter', 'kommissionierer', 'packer',
            'produktionsarbeiter', 'fabrikarbeiter', 'hilfsarbeiter', 'helfer',
            # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
            'ouvrier', 'manutentionnaire', 'pr√©parateur', 'magasinier', 'manoeuvre',
            'ouvrier production', 'employ√© entrep√¥t',
            # –ò—Å–ø–∞–Ω—Å–∫–∏–π
            'obrero', 'operario', 'mozo', 'preparador', 'operario almac√©n',
            'trabajador construcci√≥n', 'pe√≥n',
            # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
            'operaio', 'magazziniere', 'addetto', 'manovale', 'operaio edile',
            'addetto produzione',
            # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
            'bouwvakker', 'magazijnmedewerker', 'orderpicker', 'productiemedewerker',
            'lader', 'helper',
            # –ü–æ–ª—å—Å–∫–∏–π
            'robotnik', 'pracownik', 'magazynier', 'pakowacz', 'operator',
            'robotnik budowlany', 'pracownik produkcji',
            # –ß–µ—à—Å–∫–∏–π
            'dƒõln√≠k', 'pracovn√≠k', 'skladn√≠k', 'baliƒç', 'oper√°tor',
            'stavebn√≠ dƒõln√≠k', 'v√Ωrobn√≠ dƒõln√≠k',
            # –û—Å—Ç–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
        ]
        
        if any(term in search_lower for term in construction_searches):
            relevant = [
                # ========== –°–¢–†–û–ò–¢–ï–õ–¨–°–¢–í–û ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'construction', 'builder', 'building', 'site', 'trades', 'labourer',
                'groundworker', 'general operative', 'site operative', 'handyman',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'bau', 'bauarbeiter', 'bauhilfsarbeiter', 'bauhelfer', 'handwerker',
                'baugewerbe', 'baubranche', 'baustelle', 'monteur', 'baustellenhelfer',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'b√¢timent', 'construction', 'ouvrier b√¢timent', 'manoeuvre', 'chantier',
                'travaux', 'ma√ßon', 'aide ma√ßon', 'ouvrier polyvalent',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'construcci√≥n', 'obrero construcci√≥n', 'pe√≥n', 'alba√±il', 'oficial',
                'ayudante', 'obra', 'edificaci√≥n',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'edile', 'costruzioni', 'operaio edile', 'manovale', 'muratore',
                'cantiere', 'addetto cantiere', 'operaio generico',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'bouw', 'bouwvakker', 'bouwplaats', 'grondwerker', 'hulpkracht',
                'bouwmedewerker', 'allround medewerker',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'budowa', 'robotnik budowlany', 'pracownik budowy', 'pomocnik',
                'budowlaniec', 'robotnik', 'pracownik fizyczny',
                
                # –ß–µ—à—Å–∫–∏–π
                'stavba', 'stavebn√≠ dƒõln√≠k', 'pracovn√≠k stavby', 'pomocn√≠k',
                'stavebnictv√≠', 'dƒõln√≠k', 'pomocn√Ω pracovn√≠k',

                # ========== –°–ö–õ–ê–î –ò –õ–û–ì–ò–°–¢–ò–ö–ê ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'warehouse', 'picker', 'packer', 'loader', 'operative', 'handler',
                'order picker', 'stock', 'dispatch', 'goods in', 'fulfillment',
                'logistics', 'distribution', 'freight',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'lager', 'lagerarbeiter', 'lagermitarbeiter', 'lagerhelfer',
                'kommissionierer', 'kommissionierung', 'picker', 'packer',
                'versand', 'wareneingang', 'logistik', 'distribution',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'entrep√¥t', 'magasinier', 'pr√©parateur commandes', 'manutentionnaire',
                'agent logistique', 'employ√© entrep√¥t', 'cariste', 'conditionnement',
                'exp√©dition', 'r√©ception',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'almac√©n', 'operario almac√©n', 'mozo', 'preparador pedidos',
                'operador log√≠stica', 'reponedor', 'expedici√≥n', 'recepci√≥n',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'magazzino', 'magazziniere', 'addetto picking', 'operatore',
                'addetto logistica', 'preparazione ordini', 'spedizioni',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'magazijn', 'magazijnmedewerker', 'orderpicker', 'picker',
                'logistiek medewerker', 'inpakker', 'expeditie', 'ontvangst',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'magazyn', 'magazynier', 'pracownik magazynu', 'pakowacz',
                'operator magazynu', 'kompletacja', 'logistyk', 'ekspedycja',
                
                # –ß–µ—à—Å–∫–∏–π
                'sklad', 'skladn√≠k', 'skladov√Ω pracovn√≠k', 'baliƒç',
                'oper√°tor skladu', 'kompletace', 'expedice', 'p≈ô√≠jem',

                # ========== –ü–†–û–ò–ó–í–û–î–°–¢–í–û ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'production', 'factory', 'manufacturing', 'assembly', 'operator',
                'machine operator', 'line worker', 'process worker',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'produktion', 'produktionsmitarbeiter', 'fabrik', 'fabrikarbeiter',
                'fertigung', 'fertigungsmitarbeiter', 'montage', 'maschinenarbeiter',
                'flie√üband', 'industriearbeiter',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'production', 'ouvrier production', 'usine', 'fabrication',
                'op√©rateur machine', 'agent production', 'cha√Æne production',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'producci√≥n', 'operario producci√≥n', 'f√°brica', 'fabricaci√≥n',
                'operador m√°quina', 'cadena montaje', 'industrial',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'produzione', 'operaio produzione', 'fabbrica', 'manifattura',
                'operatore macchine', 'catena montaggio', 'industriale',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'productie', 'productiemedewerker', 'fabriek', 'fabricage',
                'machine operator', 'assemblage', 'industrie',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'produkcja', 'robotnik produkcyjny', 'fabryka', 'wytwarzanie',
                'operator maszyn', 'monta≈º', 'przemys≈Ç',
                
                # –ß–µ—à—Å–∫–∏–π
                'v√Ωroba', 'v√Ωrobn√≠ dƒõln√≠k', 'tov√°rna', 'v√Ωrobn√≠',
                'oper√°tor stroj≈Ø', 'mont√°≈æ', 'pr≈Ømysl',

                # ========== –û–ë–©–ò–ï –¢–ï–†–ú–ò–ù–´ ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'entry level', 'no experience', 'unskilled', 'manual', 'physical',
                'general worker', 'temp worker', 'casual', 'seasonal',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'ungelernt', 'ohne erfahrung', 'hilfsarbeiter', 'k√∂rperlich',
                'zeitarbeit', 'leiharbeit', 'aushilfe', 'saisonarbeit',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'non qualifi√©', 'sans exp√©rience', 'travail physique', 'manuel',
                'int√©rim', 'temporaire', 'saisonnier',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'sin experiencia', 'trabajo f√≠sico', 'manual', 'temporal',
                'operario', 'pe√≥n', 'eventual',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'senza esperienza', 'lavoro fisico', 'manuale', 'temporaneo',
                'operaio generico', 'stagionale',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'zonder ervaring', 'fysiek werk', 'handmatig', 'tijdelijk',
                'uitzendkracht', 'seizoenswerk',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'bez do≈õwiadczenia', 'praca fizyczna', 'fizyczny', 'tymczasowy',
                'robotnik', 'sezonowy',
                
                # –ß–µ—à—Å–∫–∏–π
                'bez zku≈°enost√≠', 'fyzick√° pr√°ce', 'manu√°ln√≠', 'doƒçasn√Ω',
                'sez√≥nn√≠', 'brig√°dn√≠k'
            ]
            
            irrelevant = [
                # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                'manager', 'supervisor', 'coordinator', 'engineer', 'technician',
                'team leader', 'foreman', 'shift leader',
                'leiter', 'meister', 'vorarbeiter', 'techniker', 'ingenieur',
                'responsable', 'chef √©quipe', 'contrema√Ætre', 'technicien',
                'supervisor', 'capataz', 'jefe equipo', 't√©cnico', 'ingeniero',
                'responsabile', 'capo squadra', 'tecnico', 'ingegnere',
                'ploegbaas', 'voorman', 'technicus', 'ingenieur',
                'kierownik', 'brygadzista', 'technik', 'in≈ºynier',
                'vedouc√≠', 'mistr', 'technik', 'in≈æen√Ωr',
                
                # –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã
                'specialist', 'expert', 'skilled', 'qualified', 'professional',
                'fachkraft', 'spezialist', 'qualifiziert', 'erfahren',
                'sp√©cialiste', 'qualifi√©', 'exp√©riment√©',
                'especialista', 'cualificado', 'experimentado',
                'specialista', 'qualificato', 'esperto',
                'specialist', 'gekwalificeerd', 'ervaren',
                'specjalista', 'wykwalifikowany', 'do≈õwiadczony',
                'specialista', 'kvalifikovan√Ω', 'zku≈°en√Ω'
            ]
            
            has_relevant = any(term in title_lower for term in relevant)
            has_irrelevant = any(term in title_lower for term in irrelevant)
            
            if has_relevant and not has_irrelevant:
                return True

        # ===== üè• –£–•–û–î –ò –°–ï–†–í–ò–° (18 –°–¢–†–ê–ù) =====
        care_searches = [
            # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
            'nurse', 'caregiver', 'care worker', 'cleaner', 'housekeeper', 'nanny',
            'babysitter', 'elderly care', 'massage', 'gardener',
            # –ù–µ–º–µ—Ü–∫–∏–π
            'pflege', 'krankenschwester', 'betreuer', 'reinigung', 'haushalt',
            'babysitter', 'altenpflege', 'massage', 'g√§rtner',
            # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
            'infirmier', 'aide', 'soignant', 'm√©nage', 'nounou', 'garde',
            'nettoyage', 'massage', 'jardinier',
            # –û—Å—Ç–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏...
        ]
        
        if any(term in search_lower for term in care_searches):
            relevant = [
                # ========== –ú–ï–î–ò–¶–ò–ù–ê –ò –£–•–û–î ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'nurse', 'nursing', 'healthcare', 'caregiver', 'care worker',
                'support worker', 'healthcare assistant', 'nursing assistant',
                'elderly care', 'senior care', 'home care', 'personal care',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'pflege', 'pflegekraft', 'pflegehelfer', 'krankenpflege', 'altenpflege',
                'krankenschwester', 'gesundheitspflege', 'betreuung', 'betreuer',
                'seniorenbetreuung', 'h√§usliche pflege', 'pflegeassistent',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'infirmier', 'infirmi√®re', 'aide soignant', 'soins', 'assistance',
                'aide √† domicile', 'auxiliaire vie', 'accompagnant', 'g√©riatrie',
                'personnes √¢g√©es', 'aide familiale',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'enfermero', 'enfermera', 'cuidador', 'asistencia', 'cuidados',
                'auxiliar enfermer√≠a', 'ayuda domicilio', 'geri√°trico', 'ancianos',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'infermiere', 'infermiera', 'badante', 'assistenza', 'cura',
                'operatore sanitario', 'assistente domiciliare', 'anziani',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'verpleegkundige', 'verzorgende', 'zorgverlener', 'thuiszorg',
                'ouderenzorg', 'zorgassistent', 'persoonlijke verzorging',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'pielƒôgniarka', 'opiekun', 'opiekunka', 'opieka', 'asystent',
                'opieka domowa', 'opieka nad seniorami', 'pielƒôgnacja',
                
                # –ß–µ—à—Å–∫–∏–π
                'zdravotn√≠ sestra', 'o≈°et≈ôovatel', 'peƒçovatel', 'p√©ƒçe',
                'dom√°c√≠ p√©ƒçe', 'p√©ƒçe o seniory', 'asistent',

                # ========== –£–ë–û–†–ö–ê –ò –î–û–ú–ê–®–ù–ò–ô –°–ï–†–í–ò–° ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'cleaner', 'cleaning', 'janitor', 'housekeeper', 'housekeeping',
                'domestic', 'facility management', 'maintenance', 'office cleaning',
                'commercial cleaning', 'cleaning operative',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'reinigung', 'reinigungskraft', 'putzkraft', 'hausmeister',
                'geb√§udereinigung', 'objektreinigung', 'facility management',
                'haush√§lterin', 'haushaltshilfe', 'putzfrau',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'nettoyage', 'agent entretien', 'femme m√©nage', 'employ√© m√©nage',
                'aide m√©nag√®re', 'entretien', 'facility management',
                'nettoyeur', 'technicien surface',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'limpieza', 'limpiador', 'conserje', 'empleada limpieza',
                'empleada hogar', 'mantenimiento', 'servicios generales',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'pulizie', 'addetto pulizie', 'operatore ecologico', 'domestica',
                'colf', 'addetta domestica', 'facility management',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'schoonmaak', 'schoonmaker', 'huishoudster', 'facility',
                'schoonmaakmedewerker', 'huishoudelijke hulp',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'sprzƒÖtanie', 'sprzƒÖtacz', 'sprzƒÖtaczka', 'konserwator',
                'pracownik sprzƒÖtajƒÖcy', 'pomoc domowa', 'gospodyni',
                
                # –ß–µ—à—Å–∫–∏–π
                '√∫klid', 'ukl√≠zeƒçka', '√∫dr≈æb√°≈ô', 'facility', '√∫klidov√° slu≈æba',
                'dom√°c√≠ pomocnice', 'hospodynƒõ',

                # ========== –î–ï–¢–ò –ò –°–ï–ú–¨–Ø ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'nanny', 'babysitter', 'childcare', 'childminder', 'au pair',
                'nursery', 'kindergarten', 'daycare', 'family support',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'kinderm√§dchen', 'babysitter', 'kinderbetreuung', 'au pair',
                'kindergarten', 'kita', 'tagesmutter', 'familienhelfer',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'nounou', 'garde enfants', 'assistante maternelle', 'au pair',
                'cr√®che', 'garderie', 'aide familiale', 'pu√©ricultrice',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'ni√±era', 'cuidadora ni√±os', 'au pair', 'guarder√≠a',
                'educadora infantil', 'canguro',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'babysitter', 'tata', 'educatrice', 'au pair', 'asilo',
                'assistente infanzia',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'kinderopvang', 'oppas', 'au pair', 'cr√®che', 'kinderdagverblijf',
                'pedagogisch medewerker',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'opiekunka dzieci', 'niania', 'au pair', '≈º≈Çobek', 'przedszkole',
                'wychowawca',
                
                # –ß–µ—à—Å–∫–∏–π
                'ch≈Øva', 'babysitter', 'au pair', 'jesle', '≈°kolka',
                'vychovatelka',

                # ========== –°–ê–î –ò –õ–ê–ù–î–®–ê–§–¢ ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'gardener', 'landscaper', 'groundskeeper', 'horticulture',
                'garden maintenance', 'lawn care', 'tree surgery',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'g√§rtner', 'landschaftsg√§rtner', 'gartenpflege', 'gartenbau',
                'gr√ºnpflege', 'landschaftspflege', 'baumpflege',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'jardinier', 'paysagiste', 'espaces verts', 'horticulture',
                'entretien jardins', '√©lagage',
                
                # –ò—Å–ø–∞–Ω—Å–∫–∏–π
                'jardinero', 'paisajista', 'jardiner√≠a', 'mantenimiento jardines',
                'espacios verdes',
                
                # –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
                'giardiniere', 'paesaggista', 'giardinaggio', 'manutenzione verde',
                'cura giardini',
                
                # –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π
                'tuinman', 'hovenier', 'groenvoorziening', 'tuinonderhoud',
                'landschapsarchitect',
                
                # –ü–æ–ª—å—Å–∫–∏–π
                'ogrodnik', 'architekt krajobrazu', 'ziele≈Ñ', 'pielƒôgnacja ogrod√≥w',
                
                # –ß–µ—à—Å–∫–∏–π
                'zahradn√≠k', 'krajin√°≈ô', '√∫dr≈æba zelenƒõ', 'zahradnictv√≠',

                # ========== –ú–ê–°–°–ê–ñ –ò –í–ï–õ–ù–ï–° ==========
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'massage', 'masseur', 'masseuse', 'therapist', 'spa', 'wellness',
                'beauty', 'physiotherapy', 'relaxation',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'massage', 'masseur', 'physiotherapie', 'wellness', 'spa',
                'entspannung', 'beauty', 'kosmetik',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'massage', 'masseur', 'kin√©sith√©rapie', 'spa', 'bien-√™tre',
                'd√©tente', 'beaut√©', 'esth√©tique',
                
                # –û—Å—Ç–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ...
            ]
            
            irrelevant = [
                'manager', 'director', 'coordinator', 'supervisor', 'head',
                'chief nurse', 'senior nurse', 'nurse manager',
                'facility manager', 'cleaning supervisor',
                'head gardener', 'landscape architect'
            ]
            
            has_relevant = any(term in title_lower for term in relevant)
            has_irrelevant = any(term in title_lower for term in irrelevant)
            
            if has_relevant and not has_irrelevant:
                return True

        # ===== üíª IT –ò –¢–ï–•–ù–û–õ–û–ì–ò–ò (18 –°–¢–†–ê–ù) =====
        it_searches = [
            'python', 'developer', 'programmer', 'software', 'web', 'frontend',
            'backend', 'fullstack', 'qa', 'tester', 'analyst', 'admin',
            'entwickler', 'programmierer', 'd√©veloppeur', 'desarrollador',
            'sviluppatore', 'ontwikkelaar', 'programista', 'v√Ωvoj√°≈ô'
        ]
        
        if any(term in search_lower for term in it_searches):
            relevant = [
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'developer', 'programmer', 'engineer', 'software', 'web', 'mobile',
                'python', 'java', 'javascript', 'react', 'node', 'angular',
                'frontend', 'backend', 'fullstack', 'qa', 'tester', 'devops',
                'analyst', 'data', 'admin', 'administrator', 'sysadmin',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'entwickler', 'programmierer', 'software', 'web', 'it',
                'informatik', 'system', 'daten', 'qualit√§tssicherung',
                
                # –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
                'd√©veloppeur', 'programmeur', 'informatique', 'logiciel',
                'syst√®me', 'donn√©es', 'qualit√©',
                
                # –û—Å—Ç–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏...
            ]
            
            irrelevant = [
                'sales', 'marketing', 'recruiter', 'hr', 'business development',
                'account manager', 'consultant', 'trainer'
            ]
            
            has_relevant = any(term in title_lower for term in relevant)
            has_irrelevant = any(term in title_lower for term in irrelevant)
            
            if has_relevant and not has_irrelevant:
                return True

        # ===== üëî –û–§–ò–° –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï (18 –°–¢–†–ê–ù) =====
        office_searches = [
            'manager', 'administrator', 'coordinator', 'analyst', 'assistant',
            'leiter', 'verwaltung', 'koordinator', 'responsable', 'administrateur',
            'gerente', 'administrador', 'responsabile', 'manager', 'kierownik',
            'vedouc√≠', 'administr√°tor'
        ]
        
        if any(term in search_lower for term in office_searches):
            relevant = [
                # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
                'manager', 'administrator', 'coordinator', 'analyst', 'assistant',
                'office', 'administration', 'management', 'business', 'operations',
                
                # –ù–µ–º–µ—Ü–∫–∏–π
                'manager', 'leiter', 'administrator', 'koordinator', 'sachbearbeiter',
                'verwaltung', 'b√ºro', 'gesch√§ftsf√ºhrung', 'assistenz',
                
                # –û—Å—Ç–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏...
            ]
            
            irrelevant = [
                'software engineer', 'technical manager', 'it administrator',
                'sales manager', 'account manager'
            ]
            
            has_relevant = any(term in title_lower for term in relevant)
            has_irrelevant = any(term in title_lower for term in irrelevant)
            
            if has_relevant and not has_irrelevant:
                return True

        # ===== FALLBACK: –ú–Ø–ì–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê =====
        # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ, –¥–µ–ª–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –ø–æ–ø—ã—Ç–∫—É —Å –±–æ–ª–µ–µ –º—è–≥–∫–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏
        if len(search_term) > 4:  # –ò–∑–±–µ–≥–∞–µ–º —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤
            core_terms = search_term.lower().split()[:2]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 2 —Å–ª–æ–≤–∞
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
            if any(term in title_lower and len(term) > 3 for term in core_terms):
                # –°—Ç—Ä–æ–≥–∏–π blacklist –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —è–≤–Ω–æ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏—Ö
                strict_blacklist = [
                    'senior manager', 'director', 'head of', 'chief executive',
                    'principal engineer', 'lead architect', 'vice president',
                    'gesch√§ftsf√ºhrer', 'vorstandsvorsitzender', 'hauptgesch√§ftsf√ºhrer',
                    'directeur g√©n√©ral', 'pr√©sident directeur', 'directeur ex√©cutif',
                    'director general', 'director ejecutivo', 'consejero delegado',
                    'amministratore delegato', 'direttore generale',
                    'algemeen directeur', 'uitvoerend directeur',
                    'dyrektor generalny', 'prezes zarzƒÖdu',
                    'gener√°ln√≠ ≈ôeditel', 'v√Ωkonn√Ω ≈ôeditel'
                ]
                
                if not any(bad in title_lower for bad in strict_blacklist):
                    return True

        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫–ª–æ–Ω—è–µ–º
        return False
    
    def _determine_language_requirement(self, title: str, description: str, search_term: str) -> str:
        """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"""
        text = f"{title} {description}".lower()
        
        no_language = ['no language', '–±–µ–∑ —è–∑—ã–∫–∞', 'driver', 'delivery', 'warehouse', 'physical']
        if any(indicator in text for indicator in no_language):
            return "no_language_required"
        
        return "unknown"
    
    def _is_refugee_friendly(self, title: str, description: str, search_term: str) -> bool:
        """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ—Å—Ç–∏ –∫ –±–µ–∂–µ–Ω—Ü–∞–º"""
        text = f"{title} {description} {search_term}".lower()
        
        refugee_indicators = [
            # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
            'refugee', 'ukrainian', 'ukraine', 'asylum', 'integration',
            'newcomer', 'immigrant', 'migration', 'no language required',
            # –ù–µ–º–µ—Ü–∫–∏–π
            'ukrainisch willkommen', 'fl√ºchtling willkommen', 'ohne deutschkenntnisse', 'arbeit ohne sprache',
            # –£–∫—Ä–∞–∏–Ω—Å–∫–∏–π / —Ä—É—Å—Å–∫–∏–π
            '—É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–º –±—ñ–∂–µ–Ω—Ü—è–º', '—É–∫—Ä–∞—ó–Ω—Ü—ñ –≤—ñ—Ç–∞—é—Ç—å—Å—è', '–±–µ–∑ –∑–Ω–∞–Ω–Ω—è –º–æ–≤–∏',
            '–¥–ª—è –±–µ–∂–µ–Ω—Ü–µ–≤', '—É–∫—Ä–∞–∏–Ω—Ü–∞–º —Ä–∞–¥—ã', '–±–µ–∑ –∑–Ω–∞–Ω–∏—è —è–∑—ã–∫–∞',
            # –ü–æ–ª—å—Å–∫–∏–π
            'ukrai≈Ñc√≥w mile widziane', 'bez znajomo≈õci jƒôzyka',
            # –ß–µ—à—Å–∫–∏–π
            'ukrajinci v√≠t√°ni', 'bez znalosti jazyka'
        ]

        return any(indicator in text for indicator in refugee_indicators)
    
    def _format_salary(self, job_data: Dict, country: str) -> Optional[str]:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—Ä–ø–ª–∞—Ç—ã"""
        salary_min = job_data.get('salary_min')
        salary_max = job_data.get('salary_max')
        currency = self.countries[country]['currency']
        
        if salary_min and salary_max:
            if salary_min == salary_max:
                return f"{currency}{salary_min:,.0f}"
            else:
                return f"{currency}{salary_min:,.0f} - {currency}{salary_max:,.0f}"
        elif salary_min:
            return f"–û—Ç {currency}{salary_min:,.0f}"
        elif salary_max:
            return f"–î–æ {currency}{salary_max:,.0f}"
        else:
            return None
    
    def _deduplicate_jobs(self, jobs: List[JobVacancy]) -> List[JobVacancy]:
        """–î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è"""
        seen = set()
        unique_jobs = []
        
        for job in jobs:
            key = f"{job.title.lower()}|{job.company.lower()}|{job.location.lower()}"
            if key not in seen:
                seen.add(key)
                unique_jobs.append(job)
        
        return unique_jobs
    
    def get_cache_stats(self) -> Dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è"""
        cache_hit_rate = 0
        if self.stats['cache_hits'] + self.stats['cache_misses'] > 0:
            cache_hit_rate = self.stats['cache_hits'] / (self.stats['cache_hits'] + self.stats['cache_misses']) * 100
        
        return {
            'cache_hits': self.stats['cache_hits'],
            'cache_misses': self.stats['cache_misses'],
            'cache_hit_rate': f"{cache_hit_rate:.1f}%",
            'api_requests': self.stats['api_requests'],
            'total_jobs_found': self.stats['total_jobs_found']
        }
    
    def cleanup_cache(self):
        """–û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞"""
        self.cache_manager.cleanup_expired_cache()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üåç GLOBAL JOB AGGREGATOR v2.4")
    print("üíæ –° –£–ú–ù–´–ú –ö–ï–®–ò–†–û–í–ê–ù–ò–ï–ú")
    print("=" * 50)
    
    try:
        aggregator = GlobalJobAggregator(cache_duration_hours=12)  # –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–æ 12 —á–∞—Å–æ–≤
        
        # –ü—Ä–∏–º–µ—Ä –ø–æ–∏—Å–∫–∞
        preferences = {
            'is_refugee': True,
            'selected_jobs': ['–í–æ–¥–∏—Ç–µ–ª—å —Ç–∞–∫—Å–∏', '–ö—É—Ä—å–µ—Ä –ø–µ—à–∫–æ–º'],
            'countries': ['de', 'pl'],
            'city': 'Berlin'
        }
        
        print(f"\n‚úÖ –¢–ï–°–¢–û–í–´–ô –ü–û–ò–°–ö:")
        print(f"üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏: {', '.join(preferences['selected_jobs'])}")
        print(f"üåç –°—Ç—Ä–∞–Ω—ã: {', '.join(preferences['countries'])}")
        print(f"üìç –ì–æ—Ä–æ–¥: {preferences['city']}")
        
        start_time = time.time()
        
        # –ü–µ—Ä–≤—ã–π –ø–æ–∏—Å–∫ (–±—É–¥–µ—Ç –∫–µ—à–∏—Ä–æ–≤–∞—Ç—å—Å—è)
        print(f"\nüöÄ –ü–ï–†–í–´–ô –ü–û–ò–°–ö (API)...")
        jobs1 = aggregator.search_specific_jobs(preferences)
        search_time1 = time.time() - start_time
        
        print(f"‚è±Ô∏è –í—Ä–µ–º—è: {search_time1:.1f}—Å, –Ω–∞–π–¥–µ–Ω–æ: {len(jobs1)} –≤–∞–∫–∞–Ω—Å–∏–π")
        
        # –í—Ç–æ—Ä–æ–π –ø–æ–∏—Å–∫ (–∏–∑ –∫–µ—à–∞)
        print(f"\nüöÄ –í–¢–û–†–û–ô –ü–û–ò–°–ö (–ö–ï–®–ò–†–û–í–ê–ù–ò–ï)...")
        start_time2 = time.time()
        jobs2 = aggregator.search_specific_jobs(preferences)
        search_time2 = time.time() - start_time2
        
        print(f"‚è±Ô∏è –í—Ä–µ–º—è: {search_time2:.1f}—Å, –Ω–∞–π–¥–µ–Ω–æ: {len(jobs2)} –≤–∞–∫–∞–Ω—Å–∏–π")
        print(f"üöÄ –£—Å–∫–æ—Ä–µ–Ω–∏–µ: {search_time1/search_time2:.1f}x")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats = aggregator.get_cache_stats()
        print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–ï–®–ò–†–û–í–ê–ù–ò–Ø:")
        for key, value in stats.items():
            print(f"   {key}: {value}")
        
        # –û—á–∏—Å—Ç–∫–∞
        aggregator.cleanup_cache()
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()