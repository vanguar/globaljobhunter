from flask_mail import Mail, Message
from database import db, Subscriber, EmailLog
from datetime import datetime, timedelta
import os
from threading import Thread

mail = Mail()

def send_async_email(app, msg):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ email –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    with app.app_context():
        try:
            print(f"üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –Ω–∞ {msg.recipients[0]}...")
            mail.send(msg)
            print(f"‚úÖ Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {msg.recipients[0]}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email –Ω–∞ {msg.recipients[0]}: {e}")
            return False

def send_job_notifications(app, aggregator):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º"""
    with app.app_context():
        print("üìß –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
        
        subscribers = Subscriber.query.filter_by(is_active=True).all()
        print(f"üë• –ù–∞–π–¥–µ–Ω–æ {len(subscribers)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")
        
        sent_count = 0
        
        for subscriber in subscribers:
            try:
                print(f"üìß –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {subscriber.email}...")
                
                preferences = {
                    'is_refugee': subscriber.is_refugee,
                    'selected_jobs': subscriber.get_selected_jobs(),
                    'countries': subscriber.get_countries(),
                    'city': subscriber.city
                }
                
                if not preferences['selected_jobs'] or not preferences['countries']:
                    print(f"‚ö†Ô∏è –£ {subscriber.email} –Ω–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –∏–ª–∏ —Å—Ç—Ä–∞–Ω")
                    continue
                
                # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è –ö–ê–ñ–î–û–ì–û –ø–æ–¥–ø–∏—Å—á–∏–∫–∞
                fake_jobs = []
                for i, job in enumerate(preferences['selected_jobs'][:3]):
                    for j, country_code in enumerate(preferences['countries'][:2]):
                        country_names = {'de': '–ì–µ—Ä–º–∞–Ω–∏—è', 'pl': '–ü–æ–ª—å—à–∞', 'us': '–°–®–ê', 'ca': '–ö–∞–Ω–∞–¥–∞'}
                        country_name = country_names.get(country_code, country_code)
                        
                        fake_job = type('Job', (), {
                            'title': f"{job}",
                            'company': f'–ï–≤—Ä–æ–ø–µ–π—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è #{i+1}',
                            'location': f"–ì–ª–∞–≤–Ω—ã–π –æ—Ñ–∏—Å, {country_name}",
                            'country': country_name,
                            'salary': '‚Ç¨2000-3000' if country_code in ['de', 'pl'] else '$3000-4000',
                            'description': f'–û—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ {job}. –ú—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –±–µ–∂–µ–Ω—Ü–µ–≤ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É.',
                            'apply_url': f'https://example.com/apply/{i}{j}',
                            'refugee_friendly': True,
                            'language_requirement': 'no_language_required' if subscriber.is_refugee else 'basic_required'
                        })()
                        fake_jobs.append(fake_job)
                
                print(f"üéØ –°–æ–∑–¥–∞–Ω–æ {len(fake_jobs)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è {subscriber.email}")
                
                if len(fake_jobs) > 0:
                    print(f"üì§ –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email –Ω–∞ {subscriber.email}")
                    success = send_job_email(app, subscriber, fake_jobs, preferences)
                    
                    if success:
                        log = EmailLog(
                        subscriber_id=subscriber.id,  # ‚Üê –ü–†–ê–í–ò–õ–¨–ù–û
                        subject=f"–ù–∞–π–¥–µ–Ω–æ {len(fake_jobs)} –Ω–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π",
                        jobs_count=len(fake_jobs),
                        status='sent',
                        sent_at=datetime.now()
                    )
                        db.session.add(log)
                        subscriber.last_sent = datetime.now()
                        sent_count += 1
                        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {subscriber.email}")
                        time.sleep(2)  # 2 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –ø–∏—Å—å–º–∞–º–∏
                    else:
                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ {subscriber.email}")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {subscriber.email}: {e}")
                import traceback
                traceback.print_exc()
        
        db.session.commit()
        print(f"‚úÖ –ò—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent_count} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
        return sent_count

def should_send_notification(subscriber):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
    if not subscriber.last_sent:
        return True
    
    now = datetime.utcnow()
    
    if subscriber.frequency == 'daily':
        return now - subscriber.last_sent > timedelta(days=1)
    elif subscriber.frequency == 'weekly':
        return now - subscriber.last_sent > timedelta(days=7)
    elif subscriber.frequency == 'monthly':
        return now - subscriber.last_sent > timedelta(days=30)
    
    return False

def send_job_email(app, subscriber, jobs, preferences):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ email —Å –≤–∞–∫–∞–Ω—Å–∏—è–º–∏"""
    try:
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –Ω–∞ {subscriber.email} —Å {len(jobs)} –≤–∞–∫–∞–Ω—Å–∏—è–º–∏")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º HTML –∫–æ–Ω—Ç–µ–Ω—Ç
        html_content = generate_email_html(subscriber, jobs, preferences)
        
        msg = Message(
            subject=f"üåç –ù–∞–π–¥–µ–Ω–æ {len(jobs)} –Ω–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –≤–∞—Å!",
            sender=os.getenv('MAIL_DEFAULT_SENDER'),
            recipients=[subscriber.email],
            html=html_content
        )
        
        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –°–ò–ù–•–†–û–ù–ù–û –∫–∞–∫ –≤ welcome email
        with app.app_context():
            mail.send(msg)
            print(f"‚úÖ Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {subscriber.email}")
            return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email –Ω–∞ {subscriber.email}: {e}")
        return False

def generate_email_html(subscriber, jobs, preferences):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –¥–ª—è email"""
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å—Ç—Ä–∞–Ω–∞–º
    jobs_by_country = {}
    for job in jobs[:20]:  # –ú–∞–∫—Å–∏–º—É–º 20 –≤–∞–∫–∞–Ω—Å–∏–π
        country = job.country
        if country not in jobs_by_country:
            jobs_by_country[country] = []
        jobs_by_country[country].append(job)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º HTML
    html = f"""
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8">
        <title>–ù–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –æ—Ç GlobalJobHunter</title>
        <style>
            body {{ font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f8f9fa; }}
            .container {{ max-width: 600px; margin: 0 auto; background: white; border-radius: 10px; overflow: hidden; }}
            .header {{ background: #0057B7; color: white; padding: 30px 20px; text-align: center; }}
            .content {{ padding: 20px; }}
            .job-card {{ border: 1px solid #dee2e6; border-radius: 8px; padding: 15px; margin: 15px 0; }}
            .job-title {{ font-weight: bold; color: #0057B7; font-size: 16px; }}
            .job-company {{ color: #6c757d; margin: 5px 0; }}
            .job-location {{ color: #28a745; font-size: 14px; }}
            .country-header {{ background: #e9ecef; padding: 15px; margin: 20px 0 10px 0; border-radius: 5px; font-weight: bold; }}
            .footer {{ background: #f8f9fa; padding: 20px; text-align: center; font-size: 12px; color: #6c757d; }}
            .btn {{ background: #0057B7; color: white !important; padding: 10px 20px; text-decoration: none; border-radius: 5px; display: inline-block; }}
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>üåç GlobalJobHunter</h1>
                <p>–ù–∞–π–¥–µ–Ω–æ {len(jobs)} –Ω–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –≤–∞—Å!</p>
            </div>
            
            <div class="content">
                <p>–ü—Ä–∏–≤–µ—Ç! –ú—ã –Ω–∞—à–ª–∏ –Ω–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –≤–∞—à–∏–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º:</p>
                <ul>
                    <li><strong>–ü—Ä–æ—Ñ–µ—Å—Å–∏–∏:</strong> {', '.join(preferences['selected_jobs'][:3])}{'...' if len(preferences['selected_jobs']) > 3 else ''}</li>
                    <li><strong>–°—Ç—Ä–∞–Ω—ã:</strong> {', '.join(preferences['countries'])}</li>
                    {f"<li><strong>–ì–æ—Ä–æ–¥:</strong> {preferences['city']}</li>" if preferences.get('city') else ''}
                </ul>
    """
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º
    for country, country_jobs in jobs_by_country.items():
        html += f'<div class="country-header">üåç {country} ({len(country_jobs)} –≤–∞–∫–∞–Ω—Å–∏–π)</div>'
        
        for job in country_jobs[:5]:  # –ú–∞–∫—Å–∏–º—É–º 5 –Ω–∞ —Å—Ç—Ä–∞–Ω—É
            salary_text = f"<br><strong>üí∞ {job.salary}</strong>" if job.salary else ""
            badges = ""
            if job.refugee_friendly:
                badges += '<span style="background: #28a745; color: white; padding: 2px 8px; border-radius: 10px; font-size: 11px; margin-right: 5px;">üè† –î–ª—è –±–µ–∂–µ–Ω—Ü–µ–≤</span>'
            if job.language_requirement == 'no_language_required':
                badges += '<span style="background: #17a2b8; color: white; padding: 2px 8px; border-radius: 10px; font-size: 11px;">üîá –ë–µ–∑ —è–∑—ã–∫–∞</span>'
            
            html += f"""
            <div class="job-card">
                <div class="job-title">{job.title}</div>
                <div class="job-company">üè¢ {job.company}</div>
                <div class="job-location">üìç {job.location}</div>
                {salary_text}
                <div style="margin: 10px 0;">{badges}</div>
                <a href="{job.apply_url}" class="btn" target="_blank" style="color: white !important; text-decoration: none;">–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è</a>
            </div>
            """
    
    html += f"""
            </div>
            
            <div class="footer">
                <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç GlobalJobHunter</p>
                <p><a href="http://localhost:5000/subscription/manage?email={subscriber.email}">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</a> | 
                <p><a href="http://localhost:5000/subscription/manage?email={subscriber.email}">–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏</a></p>
                <p>¬© 2025 GlobalJobHunter. –°–ª–∞–≤–∞ –£–∫—Ä–∞–∏–Ω–µ! üá∫üá¶</p>
            </div>
        </div>
    </body>
    </html>
    """
    
    return html

def send_welcome_email(app, email):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ email"""
    try:
        print(f"üîÑ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º welcome email –¥–ª—è {email}...")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL
        base_url = os.getenv('BASE_URL', 'http://localhost:5000')
        manage_url = f"{base_url}/subscription/manage?email={email}"
        unsubscribe_url = f"{base_url}/unsubscribe?email={email}"
        
        html_content = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <style>
                body {{ font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f8f9fa; }}
                .container {{ max-width: 600px; margin: 0 auto; background: white; border-radius: 15px; overflow: hidden; box-shadow: 0 4px 20px rgba(0,0,0,0.1); }}
                .header {{ background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 40px 20px; text-align: center; }}
                .content {{ padding: 30px; }}
                .button {{ display: inline-block; background: #667eea; color: white; text-decoration: none; padding: 12px 25px; border-radius: 25px; font-weight: bold; margin: 10px 5px; }}
                .footer {{ background: #f8f9fa; padding: 20px; text-align: center; font-size: 12px; color: #666; }}
                .info-box {{ background: #e3f2fd; border-left: 4px solid #2196f3; padding: 15px; margin: 20px 0; border-radius: 5px; }}
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>üåç –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GlobalJobHunter!</h1>
                    <p>–í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–∏—Å–∫–µ —Ä–∞–±–æ—Ç—ã –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É</p>
                </div>
                <div class="content">
                    <h2>üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!</h2>
                    <p>–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–¥–±–æ—Ä–∫–∏ –≤–∞–∫–∞–Ω—Å–∏–π –ø—Ä—è–º–æ –Ω–∞ –≤–∞—à email.</p>
                    
                    <div class="info-box">
                        <h4>üìß –ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:</h4>
                        <ul>
                            <li>–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –ø–æ–¥–±–æ—Ä–∫–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π</li>
                            <li>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π</li>
                            <li>–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –±–µ–∂–µ–Ω—Ü–µ–≤</li>
                            <li>–í–∞–∫–∞–Ω—Å–∏–∏ –±–µ–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —è–∑—ã–∫—É</li>
                        </ul>
                    </div>
                    
                    <div style="text-align: center; margin: 30px 0;">
                        <a href="{manage_url}" class="button">‚öôÔ∏è –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–¥–ø–∏—Å–∫–æ–π</a>
                        <a href="{base_url}" class="button" style="background: #28a745;">üîç –ù–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É —Å–µ–π—á–∞—Å</a>
                    </div>
                    
                    <div style="background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px; padding: 15px; margin: 20px 0;">
                        <h5 style="margin-top: 0; color: #856404;">üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π</h5>
                        <p style="margin: 10px 0; color: #856404; font-size: 14px;">
                            <strong>–í—ã –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è:</strong><br>
                            ‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏ —Å—Ç—Ä–∞–Ω—ã –ø–æ–∏—Å–∫–∞<br>
                            ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π<br>
                            ‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥–∞<br>
                            ‚Ä¢ –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
                        </p>
                        <p style="margin: 10px 0; color: #856404; font-size: 14px;">
                            <strong>–î–ª—è —ç—Ç–æ–≥–æ:</strong> –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–¥–ø–∏—Å–∫–æ–π" –≤—ã—à–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –ø–∏—Å—å–º–∞—Ö —Å –≤–∞–∫–∞–Ω—Å–∏—è–º–∏.
                        </p>
                    </div>
                    
                    <p><small>–í–∞—à email: {email}</small></p>
                    <p><small>–ß–∞—Å—Ç–æ—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</small></p>
                    <p><small>–î–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {datetime.now().strftime('%d.%m.%Y %H:%M')}</small></p>
                </div>
                <div class="footer">
                    <p><a href="{manage_url}">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π</a> | <a href="{unsubscribe_url}">–û—Ç–ø–∏—Å–∞—Ç—å—Å—è</a> | <a href="{base_url}">–ù–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É</a></p>
                    <p>¬© 2025 GlobalJobHunter.</p>
                </div>
            </div>
        </body>
        </html>
        """
        
        msg = Message(
            subject="üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GlobalJobHunter!",
            sender=os.getenv('MAIL_DEFAULT_SENDER'),
            recipients=[email],
            html=html_content
        )
        
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º welcome email...")
        
        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ë–ï–ó –ø–æ—Ç–æ–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        with app.app_context():
            mail.send(msg)
            print(f"‚úÖ Welcome email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {email}")
            
            # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞
            subscriber = Subscriber.query.filter_by(email=email).first()
            if subscriber:
                log = EmailLog(
                    subscriber_id=subscriber.id,  # ‚Üê –ü–†–ê–í–ò–õ–¨–ù–û
                    subject="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GlobalJobHunter!",
                    jobs_count=0,
                    status='sent',
                    sent_at=datetime.now()
                )
                db.session.add(log)
            db.session.add(log)
            db.session.commit()
            print(f"üìù –õ–æ–≥ –∑–∞–ø–∏—Å–∞–Ω –≤ –±–∞–∑—É")
            
            return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ welcome email –Ω–∞ {email}: {str(e)}")
        
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        try:
            with app.app_context():
                log = EmailLog(
                    email=email,
                    status='failed',
                    error_message=str(e),
                    sent_at=datetime.now()
                )
                db.session.add(log)
                db.session.commit()
                print(f"üìù –õ–æ–≥ –æ—à–∏–±–∫–∏ –∑–∞–ø–∏—Å–∞–Ω –≤ –±–∞–∑—É")
        except Exception as log_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞: {log_error}")
            
        return False
    
def send_preferences_update_email(app, subscriber):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ email –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π"""
    print(f"üìß send_preferences_update_email –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è {subscriber.email}")  # –î–û–ë–ê–í–õ–ï–ù–û
    
    try:
        print("üîÑ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º email...")  # –î–û–ë–ê–í–õ–ï–ù–û
        
        base_url = os.getenv('BASE_URL', 'http://localhost:5000')
        manage_url = f"{base_url}/subscription/manage?email={subscriber.email}"
        
        print(f"üîó manage_url: {manage_url}")  # –î–û–ë–ê–í–õ–ï–ù–û
        
        html_content = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <style>
                body {{ font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f8f9fa; }}
                .container {{ max-width: 500px; margin: 0 auto; background: white; border-radius: 10px; overflow: hidden; }}
                .header {{ background: #28a745; color: white; padding: 20px; text-align: center; }}
                .content {{ padding: 20px; }}
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h2>‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!</h2>
                </div>
                <div class="content">
                    <p>–í–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:</p>
                    <ul>
                        <li><strong>–ü—Ä–æ—Ñ–µ—Å—Å–∏–∏:</strong> {', '.join(subscriber.get_selected_jobs()[:3])}{'...' if len(subscriber.get_selected_jobs()) > 3 else ''}</li>
                        <li><strong>–°—Ç—Ä–∞–Ω—ã:</strong> {', '.join(subscriber.get_countries())}</li>
                        <li><strong>–ì–æ—Ä–æ–¥:</strong> {subscriber.city or '–ù–µ —É–∫–∞–∑–∞–Ω'}</li>
                        <li><strong>–ß–∞—Å—Ç–æ—Ç–∞:</strong> {subscriber.frequency}</li>
                    </ul>
                    <p><a href="{manage_url}">–ò–∑–º–µ–Ω–∏—Ç—å —Å–Ω–æ–≤–∞</a></p>
                </div>
            </div>
        </body>
        </html>
        """
        
        print("üîÑ –°–æ–∑–¥–∞–µ–º Message...")  # –î–û–ë–ê–í–õ–ï–ù–û
        
        msg = Message(
            subject="‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã",
            sender=os.getenv('MAIL_DEFAULT_SENDER'),
            recipients=[subscriber.email],
            html=html_content
        )
        
        print(f"üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –æ—Ç {msg.sender} –Ω–∞ {msg.recipients}...")  # –î–û–ë–ê–í–õ–ï–ù–û
        
        with app.app_context():
            mail.send(msg)
            print("‚úÖ mail.send() –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")  # –î–û–ë–ê–í–õ–ï–ù–û
            
            # –õ–æ–≥–∏—Ä—É–µ–º –≤ –±–∞–∑—É
            print("üîÑ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ª–æ–≥ –≤ –ë–î...")  # –î–û–ë–ê–í–õ–ï–ù–û
            log = EmailLog(
                subscriber_id=subscriber.id,
                subject="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã",
                jobs_count=0,
                status='sent',
                sent_at=datetime.now()
            )
            db.session.add(log)
            db.session.commit()
            print("‚úÖ –õ–æ–≥ –∑–∞–ø–∏—Å–∞–Ω –≤ –ë–î")  # –î–û–ë–ê–í–õ–ï–ù–û
            
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö: {e}")
        import traceback
        traceback.print_exc()  # –î–û–ë–ê–í–õ–ï–ù–û
        return False   